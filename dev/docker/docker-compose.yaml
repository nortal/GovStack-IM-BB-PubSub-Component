version: '3.8'

services:

  artemis:
    # TODO: figure out why it starts failing with 1.0.22 image
    image: quay.io/artemiscloud/activemq-artemis-broker-kubernetes:1.0.21
    ports:
      - "8161:8161"
      - "5672:5672"
      - "61616:61616"
    networks:
      - mynetwork
    environment:
      AMQ_USER: "admin"
      AMQ_PASSWORD: "admin"
      AMQ_QUEUES: "pubsub-push-events"
      AMQ_EXTRA_ARGS: "--host 0.0.0.0 --http-host 0.0.0.0 --relax-jolokia"

  db:
    # latest tag gives:
    # popen failure: Cannot allocate memory initdb:
    # error: program "postgres" is needed by initdb but was not found in the same directory as "/usr/lib/postgresql/15/bin/initdb"
    # https://github.com/docker-library/postgres/issues/1099#issuecomment-1593228770
    image: postgres:15-bullseye
    ports:
      - "5432:5432"
    volumes:
      - ./config/db-init:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: im_msg_usr
      POSTGRES_PASSWORD: im_msg_pass
      POSTGRES_DB: im_msg_db
    networks:
      - mynetwork
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 1s
      timeout: 10s
      retries: 60

  schema:
    image: ${SCHEMA_IMAGE_NAME:-schema:latest}
    environment:
      - JDBC_URL=jdbc:postgresql://db:5432/im_msg_db?currentSchema=im_msg
    depends_on:
      db:
        condition: service_healthy
    networks:
      - mynetwork

  management-api:
    image: ${MANAGEMENT_API_IMAGE_NAME:-management-api:latest}
    ports:
      - "8080:8080"
    environment:
      SPRING_CONFIG_LOCATION: /config/
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://iam.gvc.lt.nortal.com:8089/realms/pubsub-realm
    volumes:
      - ./config/management-api/application-docker.yaml:/config/application.yaml
    networks:
      - mynetwork
    depends_on:
      db:
        condition: service_healthy
      artemis:
        condition: service_started
    #entrypoint: ["sh", "-c", "sleep 5 && exec /workspace/app/build/libs/management-api-0.0.1.jar"]

  management-ui:
    image: ${MANAGEMENT_UI_IMAGE_NAME:-management-ui:latest}
    ports:
      - "5173:8080"
    networks:
      - mynetwork
    environment:
      VUE_APP_OIDC_PROVIDER_URL: "http://iam.gvc.lt.nortal.com:8089/realms/pubsub-realm"
      VUE_APP_OIDC_CLIENT_SECRET: "pubsub-management-ui-dev-secret"
      VUE_APP_OIDC_CLIENT_ID: "pubsub-management-ui-dev"
      VUE_APP_MANAGEMENT_API_URI: ${VUE_APP_MANAGEMENT_API_URI:-http://localhost:8080}
    depends_on:
      management-api:
        condition: service_started

  messaging-api:
     image: ${MESSAGING_API_IMAGE_NAME:-messaging-api:latest}
     ports:
       - "8090:8090"
       - "9000:9000"
     environment:
       quarkus.config.locations: /config/application.properties
     volumes:
       - ./config/messaging-api/application-docker.properties:/config/application.properties
     networks:
       - mynetwork
     depends_on:
       db:
         condition: service_healthy
       artemis:
         condition: service_started

  wiremock:
    image: wiremock/wiremock:3.1.0
    command: "-verbose"
    ports:
      - "8888:8080"
    volumes:
      - ./config/wiremock:/home/wiremock
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge
