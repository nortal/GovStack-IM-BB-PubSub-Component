/*
 * This file is generated by jOOQ.
 */
package com.govstack.information_mediator.pubsub.shared.jooq.tables.records;


import com.govstack.information_mediator.pubsub.shared.jooq.tables.PublisherConstraints;

import java.time.Instant;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * record of event types a specific publisher is allowed to create
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PublisherConstraintsRecord extends UpdatableRecordImpl<PublisherConstraintsRecord> implements Record5<UUID, UUID, UUID, Instant, Instant> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>im_msg.publisher_constraints.id</code>. (technical
     * field) primary key of record
     */
    public PublisherConstraintsRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>im_msg.publisher_constraints.id</code>. (technical
     * field) primary key of record
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>im_msg.publisher_constraints.publisher_id</code>.
     * (technical field) foreign key connected to the record
     */
    public PublisherConstraintsRecord setPublisherId(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>im_msg.publisher_constraints.publisher_id</code>.
     * (technical field) foreign key connected to the record
     */
    public UUID getPublisherId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>im_msg.publisher_constraints.event_type_id</code>.
     * (technical field) foreign key connected to the record
     */
    public PublisherConstraintsRecord setEventTypeId(UUID value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>im_msg.publisher_constraints.event_type_id</code>.
     * (technical field) foreign key connected to the record
     */
    public UUID getEventTypeId() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>im_msg.publisher_constraints.created_at</code>. creation
     * time of the publisher constraint
     */
    public PublisherConstraintsRecord setCreatedAt(Instant value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>im_msg.publisher_constraints.created_at</code>. creation
     * time of the publisher constraint
     */
    public Instant getCreatedAt() {
        return (Instant) get(3);
    }

    /**
     * Setter for <code>im_msg.publisher_constraints.deleted_at</code>.
     * (technical field) deletion moment of the record
     */
    public PublisherConstraintsRecord setDeletedAt(Instant value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>im_msg.publisher_constraints.deleted_at</code>.
     * (technical field) deletion moment of the record
     */
    public Instant getDeletedAt() {
        return (Instant) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<UUID, UUID, UUID, Instant, Instant> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<UUID, UUID, UUID, Instant, Instant> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return PublisherConstraints.PUBLISHER_CONSTRAINTS.ID;
    }

    @Override
    public Field<UUID> field2() {
        return PublisherConstraints.PUBLISHER_CONSTRAINTS.PUBLISHER_ID;
    }

    @Override
    public Field<UUID> field3() {
        return PublisherConstraints.PUBLISHER_CONSTRAINTS.EVENT_TYPE_ID;
    }

    @Override
    public Field<Instant> field4() {
        return PublisherConstraints.PUBLISHER_CONSTRAINTS.CREATED_AT;
    }

    @Override
    public Field<Instant> field5() {
        return PublisherConstraints.PUBLISHER_CONSTRAINTS.DELETED_AT;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getPublisherId();
    }

    @Override
    public UUID component3() {
        return getEventTypeId();
    }

    @Override
    public Instant component4() {
        return getCreatedAt();
    }

    @Override
    public Instant component5() {
        return getDeletedAt();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getPublisherId();
    }

    @Override
    public UUID value3() {
        return getEventTypeId();
    }

    @Override
    public Instant value4() {
        return getCreatedAt();
    }

    @Override
    public Instant value5() {
        return getDeletedAt();
    }

    @Override
    public PublisherConstraintsRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public PublisherConstraintsRecord value2(UUID value) {
        setPublisherId(value);
        return this;
    }

    @Override
    public PublisherConstraintsRecord value3(UUID value) {
        setEventTypeId(value);
        return this;
    }

    @Override
    public PublisherConstraintsRecord value4(Instant value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public PublisherConstraintsRecord value5(Instant value) {
        setDeletedAt(value);
        return this;
    }

    @Override
    public PublisherConstraintsRecord values(UUID value1, UUID value2, UUID value3, Instant value4, Instant value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PublisherConstraintsRecord
     */
    public PublisherConstraintsRecord() {
        super(PublisherConstraints.PUBLISHER_CONSTRAINTS);
    }

    /**
     * Create a detached, initialised PublisherConstraintsRecord
     */
    public PublisherConstraintsRecord(UUID id, UUID publisherId, UUID eventTypeId, Instant createdAt, Instant deletedAt) {
        super(PublisherConstraints.PUBLISHER_CONSTRAINTS);

        setId(id);
        setPublisherId(publisherId);
        setEventTypeId(eventTypeId);
        setCreatedAt(createdAt);
        setDeletedAt(deletedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PublisherConstraintsRecord
     */
    public PublisherConstraintsRecord(com.govstack.information_mediator.pubsub.shared.jooq.tables.pojos.PublisherConstraints value) {
        super(PublisherConstraints.PUBLISHER_CONSTRAINTS);

        if (value != null) {
            setId(value.getId());
            setPublisherId(value.getPublisherId());
            setEventTypeId(value.getEventTypeId());
            setCreatedAt(value.getCreatedAt());
            setDeletedAt(value.getDeletedAt());
            resetChangedOnNotNull();
        }
    }
}
