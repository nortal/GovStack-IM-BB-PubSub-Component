/*
 * This file is generated by jOOQ.
 */
package com.govstack.information_mediator.pubsub.shared.jooq.tables.records;


import com.govstack.information_mediator.pubsub.shared.jooq.tables.Managers;

import java.time.Instant;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * record of managers in charge of specific rooms
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ManagersRecord extends UpdatableRecordImpl<ManagersRecord> implements Record5<UUID, String, String, Instant, Instant> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>im_msg.managers.id</code>. (technical field) Primary key
     * of record
     */
    public ManagersRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>im_msg.managers.id</code>. (technical field) Primary key
     * of record
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>im_msg.managers.identifier_type</code>. enumerator
     * specifying the source of identity
     */
    public ManagersRecord setIdentifierType(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>im_msg.managers.identifier_type</code>. enumerator
     * specifying the source of identity
     */
    public String getIdentifierType() {
        return (String) get(1);
    }

    /**
     * Setter for <code>im_msg.managers.identifier</code>. identification
     * token/code of the specified type
     */
    public ManagersRecord setIdentifier(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>im_msg.managers.identifier</code>. identification
     * token/code of the specified type
     */
    public String getIdentifier() {
        return (String) get(2);
    }

    /**
     * Setter for <code>im_msg.managers.created_at</code>. the moment of
     * assigning the manager to a room
     */
    public ManagersRecord setCreatedAt(Instant value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>im_msg.managers.created_at</code>. the moment of
     * assigning the manager to a room
     */
    public Instant getCreatedAt() {
        return (Instant) get(3);
    }

    /**
     * Setter for <code>im_msg.managers.deleted_at</code>. (technical field)
     * deletion moment of the record
     */
    public ManagersRecord setDeletedAt(Instant value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>im_msg.managers.deleted_at</code>. (technical field)
     * deletion moment of the record
     */
    public Instant getDeletedAt() {
        return (Instant) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<UUID, String, String, Instant, Instant> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<UUID, String, String, Instant, Instant> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Managers.MANAGERS.ID;
    }

    @Override
    public Field<String> field2() {
        return Managers.MANAGERS.IDENTIFIER_TYPE;
    }

    @Override
    public Field<String> field3() {
        return Managers.MANAGERS.IDENTIFIER;
    }

    @Override
    public Field<Instant> field4() {
        return Managers.MANAGERS.CREATED_AT;
    }

    @Override
    public Field<Instant> field5() {
        return Managers.MANAGERS.DELETED_AT;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getIdentifierType();
    }

    @Override
    public String component3() {
        return getIdentifier();
    }

    @Override
    public Instant component4() {
        return getCreatedAt();
    }

    @Override
    public Instant component5() {
        return getDeletedAt();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getIdentifierType();
    }

    @Override
    public String value3() {
        return getIdentifier();
    }

    @Override
    public Instant value4() {
        return getCreatedAt();
    }

    @Override
    public Instant value5() {
        return getDeletedAt();
    }

    @Override
    public ManagersRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public ManagersRecord value2(String value) {
        setIdentifierType(value);
        return this;
    }

    @Override
    public ManagersRecord value3(String value) {
        setIdentifier(value);
        return this;
    }

    @Override
    public ManagersRecord value4(Instant value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public ManagersRecord value5(Instant value) {
        setDeletedAt(value);
        return this;
    }

    @Override
    public ManagersRecord values(UUID value1, String value2, String value3, Instant value4, Instant value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ManagersRecord
     */
    public ManagersRecord() {
        super(Managers.MANAGERS);
    }

    /**
     * Create a detached, initialised ManagersRecord
     */
    public ManagersRecord(UUID id, String identifierType, String identifier, Instant createdAt, Instant deletedAt) {
        super(Managers.MANAGERS);

        setId(id);
        setIdentifierType(identifierType);
        setIdentifier(identifier);
        setCreatedAt(createdAt);
        setDeletedAt(deletedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ManagersRecord
     */
    public ManagersRecord(com.govstack.information_mediator.pubsub.shared.jooq.tables.pojos.Managers value) {
        super(Managers.MANAGERS);

        if (value != null) {
            setId(value.getId());
            setIdentifierType(value.getIdentifierType());
            setIdentifier(value.getIdentifier());
            setCreatedAt(value.getCreatedAt());
            setDeletedAt(value.getDeletedAt());
            resetChangedOnNotNull();
        }
    }
}
