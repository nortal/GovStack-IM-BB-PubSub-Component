/*
 * This file is generated by jOOQ.
 */
package com.govstack.information_mediator.pubsub.shared.jooq.tables.records;


import com.govstack.information_mediator.pubsub.shared.jooq.tables.PublishedMessages;

import java.time.Instant;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * record a message published to a subscriber
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PublishedMessagesRecord extends UpdatableRecordImpl<PublishedMessagesRecord> implements Record5<UUID, UUID, UUID, Instant, Instant> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>im_msg.published_messages.id</code>. (technical field)
     * primary key of record
     */
    public PublishedMessagesRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>im_msg.published_messages.id</code>. (technical field)
     * primary key of record
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>im_msg.published_messages.event_id</code>. (technical
     * field) foreign key connected to the record
     */
    public PublishedMessagesRecord setEventId(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>im_msg.published_messages.event_id</code>. (technical
     * field) foreign key connected to the record
     */
    public UUID getEventId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>im_msg.published_messages.subscription_id</code>.
     * (technical field) foreign key connected to the record
     */
    public PublishedMessagesRecord setSubscriptionId(UUID value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>im_msg.published_messages.subscription_id</code>.
     * (technical field) foreign key connected to the record
     */
    public UUID getSubscriptionId() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>im_msg.published_messages.published_at</code>. moment
     * when a message is published to a subscriber based on an event
     */
    public PublishedMessagesRecord setPublishedAt(Instant value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>im_msg.published_messages.published_at</code>. moment
     * when a message is published to a subscriber based on an event
     */
    public Instant getPublishedAt() {
        return (Instant) get(3);
    }

    /**
     * Setter for <code>im_msg.published_messages.delivered_at</code>. moment
     * when the subscriber pulls the message from their queue or the pushed
     * message is acknowledged by the subscriber
     */
    public PublishedMessagesRecord setDeliveredAt(Instant value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>im_msg.published_messages.delivered_at</code>. moment
     * when the subscriber pulls the message from their queue or the pushed
     * message is acknowledged by the subscriber
     */
    public Instant getDeliveredAt() {
        return (Instant) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<UUID, UUID, UUID, Instant, Instant> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<UUID, UUID, UUID, Instant, Instant> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return PublishedMessages.PUBLISHED_MESSAGES.ID;
    }

    @Override
    public Field<UUID> field2() {
        return PublishedMessages.PUBLISHED_MESSAGES.EVENT_ID;
    }

    @Override
    public Field<UUID> field3() {
        return PublishedMessages.PUBLISHED_MESSAGES.SUBSCRIPTION_ID;
    }

    @Override
    public Field<Instant> field4() {
        return PublishedMessages.PUBLISHED_MESSAGES.PUBLISHED_AT;
    }

    @Override
    public Field<Instant> field5() {
        return PublishedMessages.PUBLISHED_MESSAGES.DELIVERED_AT;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getEventId();
    }

    @Override
    public UUID component3() {
        return getSubscriptionId();
    }

    @Override
    public Instant component4() {
        return getPublishedAt();
    }

    @Override
    public Instant component5() {
        return getDeliveredAt();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getEventId();
    }

    @Override
    public UUID value3() {
        return getSubscriptionId();
    }

    @Override
    public Instant value4() {
        return getPublishedAt();
    }

    @Override
    public Instant value5() {
        return getDeliveredAt();
    }

    @Override
    public PublishedMessagesRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public PublishedMessagesRecord value2(UUID value) {
        setEventId(value);
        return this;
    }

    @Override
    public PublishedMessagesRecord value3(UUID value) {
        setSubscriptionId(value);
        return this;
    }

    @Override
    public PublishedMessagesRecord value4(Instant value) {
        setPublishedAt(value);
        return this;
    }

    @Override
    public PublishedMessagesRecord value5(Instant value) {
        setDeliveredAt(value);
        return this;
    }

    @Override
    public PublishedMessagesRecord values(UUID value1, UUID value2, UUID value3, Instant value4, Instant value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PublishedMessagesRecord
     */
    public PublishedMessagesRecord() {
        super(PublishedMessages.PUBLISHED_MESSAGES);
    }

    /**
     * Create a detached, initialised PublishedMessagesRecord
     */
    public PublishedMessagesRecord(UUID id, UUID eventId, UUID subscriptionId, Instant publishedAt, Instant deliveredAt) {
        super(PublishedMessages.PUBLISHED_MESSAGES);

        setId(id);
        setEventId(eventId);
        setSubscriptionId(subscriptionId);
        setPublishedAt(publishedAt);
        setDeliveredAt(deliveredAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PublishedMessagesRecord
     */
    public PublishedMessagesRecord(com.govstack.information_mediator.pubsub.shared.jooq.tables.pojos.PublishedMessages value) {
        super(PublishedMessages.PUBLISHED_MESSAGES);

        if (value != null) {
            setId(value.getId());
            setEventId(value.getEventId());
            setSubscriptionId(value.getSubscriptionId());
            setPublishedAt(value.getPublishedAt());
            setDeliveredAt(value.getDeliveredAt());
            resetChangedOnNotNull();
        }
    }
}
