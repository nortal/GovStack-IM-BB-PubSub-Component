/*
 * This file is generated by jOOQ.
 */
package com.govstack.information_mediator.pubsub.shared.jooq.tables.pojos;


import java.io.Serializable;
import java.time.Instant;
import java.util.UUID;

import org.jooq.JSONB;


/**
 * record of different versions of a specific event type
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventTypeVersions implements Serializable {

    private static final long serialVersionUID = 1L;

    private final UUID id;
    private final UUID eventTypeId;
    private final Integer version;
    private final JSONB jsonSchema;
    private final JSONB journal;
    private final Instant deletedAt;

    public EventTypeVersions(EventTypeVersions value) {
        this.id = value.id;
        this.eventTypeId = value.eventTypeId;
        this.version = value.version;
        this.jsonSchema = value.jsonSchema;
        this.journal = value.journal;
        this.deletedAt = value.deletedAt;
    }

    public EventTypeVersions(
        UUID id,
        UUID eventTypeId,
        Integer version,
        JSONB jsonSchema,
        JSONB journal,
        Instant deletedAt
    ) {
        this.id = id;
        this.eventTypeId = eventTypeId;
        this.version = version;
        this.jsonSchema = jsonSchema;
        this.journal = journal;
        this.deletedAt = deletedAt;
    }

    /**
     * Getter for <code>im_msg.event_type_versions.id</code>. (technical field)
     * primary key of record
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Getter for <code>im_msg.event_type_versions.event_type_id</code>.
     * (technical field) foreign key connected to the record
     */
    public UUID getEventTypeId() {
        return this.eventTypeId;
    }

    /**
     * Getter for <code>im_msg.event_type_versions.version</code>. version
     * number of the event type
     */
    public Integer getVersion() {
        return this.version;
    }

    /**
     * Getter for <code>im_msg.event_type_versions.json_schema</code>. JSON
     * schema of the required payload shape for this version of the event type
     */
    public JSONB getJsonSchema() {
        return this.jsonSchema;
    }

    /**
     * Getter for <code>im_msg.event_type_versions.journal</code>. (technical
     * field) auditable journal of record changes
     */
    public JSONB getJournal() {
        return this.journal;
    }

    /**
     * Getter for <code>im_msg.event_type_versions.deleted_at</code>. (technical
     * field) deletion moment of the record
     */
    public Instant getDeletedAt() {
        return this.deletedAt;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final EventTypeVersions other = (EventTypeVersions) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.eventTypeId == null) {
            if (other.eventTypeId != null)
                return false;
        }
        else if (!this.eventTypeId.equals(other.eventTypeId))
            return false;
        if (this.version == null) {
            if (other.version != null)
                return false;
        }
        else if (!this.version.equals(other.version))
            return false;
        if (this.jsonSchema == null) {
            if (other.jsonSchema != null)
                return false;
        }
        else if (!this.jsonSchema.equals(other.jsonSchema))
            return false;
        if (this.journal == null) {
            if (other.journal != null)
                return false;
        }
        else if (!this.journal.equals(other.journal))
            return false;
        if (this.deletedAt == null) {
            if (other.deletedAt != null)
                return false;
        }
        else if (!this.deletedAt.equals(other.deletedAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.eventTypeId == null) ? 0 : this.eventTypeId.hashCode());
        result = prime * result + ((this.version == null) ? 0 : this.version.hashCode());
        result = prime * result + ((this.jsonSchema == null) ? 0 : this.jsonSchema.hashCode());
        result = prime * result + ((this.journal == null) ? 0 : this.journal.hashCode());
        result = prime * result + ((this.deletedAt == null) ? 0 : this.deletedAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("EventTypeVersions (");

        sb.append(id);
        sb.append(", ").append(eventTypeId);
        sb.append(", ").append(version);
        sb.append(", ").append(jsonSchema);
        sb.append(", ").append(journal);
        sb.append(", ").append(deletedAt);

        sb.append(")");
        return sb.toString();
    }
}
