/*
 * X-Road Security Server Admin API
 * X-Road Security Server Admin API. Note that the error metadata responses described in some endpoints are subjects to change and may be updated in upcoming versions.
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: info@niis.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.govstack.information_mediator.pubsub.management.xroad_admin.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.govstack.information_mediator.pubsub.management.xroad_admin.client.model.ConfigurationStatus;
import com.govstack.information_mediator.pubsub.management.xroad_admin.client.model.DiagnosticStatusClass;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * global configuration diagnostics
 */
@JsonPropertyOrder({
  GlobalConfDiagnostics.JSON_PROPERTY_STATUS_CLASS,
  GlobalConfDiagnostics.JSON_PROPERTY_STATUS_CODE,
  GlobalConfDiagnostics.JSON_PROPERTY_PREV_UPDATE_AT,
  GlobalConfDiagnostics.JSON_PROPERTY_NEXT_UPDATE_AT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GlobalConfDiagnostics {
  public static final String JSON_PROPERTY_STATUS_CLASS = "status_class";
  private DiagnosticStatusClass statusClass;

  public static final String JSON_PROPERTY_STATUS_CODE = "status_code";
  private ConfigurationStatus statusCode;

  public static final String JSON_PROPERTY_PREV_UPDATE_AT = "prev_update_at";
  private OffsetDateTime prevUpdateAt;

  public static final String JSON_PROPERTY_NEXT_UPDATE_AT = "next_update_at";
  private OffsetDateTime nextUpdateAt;

  public GlobalConfDiagnostics() {
  }

  @JsonCreator
  public GlobalConfDiagnostics(
    @JsonProperty(JSON_PROPERTY_STATUS_CLASS) DiagnosticStatusClass statusClass, 
    @JsonProperty(JSON_PROPERTY_STATUS_CODE) ConfigurationStatus statusCode, 
    @JsonProperty(JSON_PROPERTY_PREV_UPDATE_AT) OffsetDateTime prevUpdateAt, 
    @JsonProperty(JSON_PROPERTY_NEXT_UPDATE_AT) OffsetDateTime nextUpdateAt
  ) {
    this();
    this.statusClass = statusClass;
    this.statusCode = statusCode;
    this.prevUpdateAt = prevUpdateAt;
    this.nextUpdateAt = nextUpdateAt;
  }

   /**
   * Get statusClass
   * @return statusClass
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS_CLASS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DiagnosticStatusClass getStatusClass() {
    return statusClass;
  }




   /**
   * Get statusCode
   * @return statusCode
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ConfigurationStatus getStatusCode() {
    return statusCode;
  }




   /**
   * last time updated
   * @return prevUpdateAt
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PREV_UPDATE_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getPrevUpdateAt() {
    return prevUpdateAt;
  }




   /**
   * last time updated
   * @return nextUpdateAt
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NEXT_UPDATE_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getNextUpdateAt() {
    return nextUpdateAt;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GlobalConfDiagnostics globalConfDiagnostics = (GlobalConfDiagnostics) o;
    return Objects.equals(this.statusClass, globalConfDiagnostics.statusClass) &&
        Objects.equals(this.statusCode, globalConfDiagnostics.statusCode) &&
        Objects.equals(this.prevUpdateAt, globalConfDiagnostics.prevUpdateAt) &&
        Objects.equals(this.nextUpdateAt, globalConfDiagnostics.nextUpdateAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(statusClass, statusCode, prevUpdateAt, nextUpdateAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GlobalConfDiagnostics {\n");
    sb.append("    statusClass: ").append(toIndentedString(statusClass)).append("\n");
    sb.append("    statusCode: ").append(toIndentedString(statusCode)).append("\n");
    sb.append("    prevUpdateAt: ").append(toIndentedString(prevUpdateAt)).append("\n");
    sb.append("    nextUpdateAt: ").append(toIndentedString(nextUpdateAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

