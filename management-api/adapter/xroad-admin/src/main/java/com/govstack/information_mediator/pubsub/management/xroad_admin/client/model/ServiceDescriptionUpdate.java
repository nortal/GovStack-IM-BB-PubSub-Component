/*
 * X-Road Security Server Admin API
 * X-Road Security Server Admin API. Note that the error metadata responses described in some endpoints are subjects to change and may be updated in upcoming versions.
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: info@niis.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.govstack.information_mediator.pubsub.management.xroad_admin.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.govstack.information_mediator.pubsub.management.xroad_admin.client.model.ServiceType;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * request object for updating a service description url or service code
 */
@JsonPropertyOrder({
  ServiceDescriptionUpdate.JSON_PROPERTY_URL,
  ServiceDescriptionUpdate.JSON_PROPERTY_REST_SERVICE_CODE,
  ServiceDescriptionUpdate.JSON_PROPERTY_NEW_REST_SERVICE_CODE,
  ServiceDescriptionUpdate.JSON_PROPERTY_IGNORE_WARNINGS,
  ServiceDescriptionUpdate.JSON_PROPERTY_TYPE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ServiceDescriptionUpdate {
  public static final String JSON_PROPERTY_URL = "url";
  private String url;

  public static final String JSON_PROPERTY_REST_SERVICE_CODE = "rest_service_code";
  private String restServiceCode;

  public static final String JSON_PROPERTY_NEW_REST_SERVICE_CODE = "new_rest_service_code";
  private String newRestServiceCode;

  public static final String JSON_PROPERTY_IGNORE_WARNINGS = "ignore_warnings";
  private Boolean ignoreWarnings = false;

  public static final String JSON_PROPERTY_TYPE = "type";
  private ServiceType type;

  public ServiceDescriptionUpdate() {
  }

  public ServiceDescriptionUpdate url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * path for the service description file
   * @return url
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUrl() {
    return url;
  }


  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUrl(String url) {
    this.url = url;
  }


  public ServiceDescriptionUpdate restServiceCode(String restServiceCode) {
    
    this.restServiceCode = restServiceCode;
    return this;
  }

   /**
   * service code for REST service
   * @return restServiceCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REST_SERVICE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRestServiceCode() {
    return restServiceCode;
  }


  @JsonProperty(JSON_PROPERTY_REST_SERVICE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRestServiceCode(String restServiceCode) {
    this.restServiceCode = restServiceCode;
  }


  public ServiceDescriptionUpdate newRestServiceCode(String newRestServiceCode) {
    
    this.newRestServiceCode = newRestServiceCode;
    return this;
  }

   /**
   * new service code for REST service
   * @return newRestServiceCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NEW_REST_SERVICE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNewRestServiceCode() {
    return newRestServiceCode;
  }


  @JsonProperty(JSON_PROPERTY_NEW_REST_SERVICE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNewRestServiceCode(String newRestServiceCode) {
    this.newRestServiceCode = newRestServiceCode;
  }


  public ServiceDescriptionUpdate ignoreWarnings(Boolean ignoreWarnings) {
    
    this.ignoreWarnings = ignoreWarnings;
    return this;
  }

   /**
   * if true, any ignorable warnings are ignored. if false (or missing), any warnings cause request to fail
   * @return ignoreWarnings
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IGNORE_WARNINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIgnoreWarnings() {
    return ignoreWarnings;
  }


  @JsonProperty(JSON_PROPERTY_IGNORE_WARNINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIgnoreWarnings(Boolean ignoreWarnings) {
    this.ignoreWarnings = ignoreWarnings;
  }


  public ServiceDescriptionUpdate type(ServiceType type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ServiceType getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(ServiceType type) {
    this.type = type;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceDescriptionUpdate serviceDescriptionUpdate = (ServiceDescriptionUpdate) o;
    return Objects.equals(this.url, serviceDescriptionUpdate.url) &&
        Objects.equals(this.restServiceCode, serviceDescriptionUpdate.restServiceCode) &&
        Objects.equals(this.newRestServiceCode, serviceDescriptionUpdate.newRestServiceCode) &&
        Objects.equals(this.ignoreWarnings, serviceDescriptionUpdate.ignoreWarnings) &&
        Objects.equals(this.type, serviceDescriptionUpdate.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(url, restServiceCode, newRestServiceCode, ignoreWarnings, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceDescriptionUpdate {\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    restServiceCode: ").append(toIndentedString(restServiceCode)).append("\n");
    sb.append("    newRestServiceCode: ").append(toIndentedString(newRestServiceCode)).append("\n");
    sb.append("    ignoreWarnings: ").append(toIndentedString(ignoreWarnings)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

