/*
 * X-Road Security Server Admin API
 * X-Road Security Server Admin API. Note that the error metadata responses described in some endpoints are subjects to change and may be updated in upcoming versions.
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: info@niis.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.govstack.information_mediator.pubsub.management.xroad_admin.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.govstack.information_mediator.pubsub.management.xroad_admin.client.model.TokenInitStatus;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Initialization status of the Security Server
 */
@JsonPropertyOrder({
  InitializationStatus.JSON_PROPERTY_IS_ANCHOR_IMPORTED,
  InitializationStatus.JSON_PROPERTY_IS_SERVER_CODE_INITIALIZED,
  InitializationStatus.JSON_PROPERTY_IS_SERVER_OWNER_INITIALIZED,
  InitializationStatus.JSON_PROPERTY_SOFTWARE_TOKEN_INIT_STATUS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InitializationStatus {
  public static final String JSON_PROPERTY_IS_ANCHOR_IMPORTED = "is_anchor_imported";
  private Boolean isAnchorImported;

  public static final String JSON_PROPERTY_IS_SERVER_CODE_INITIALIZED = "is_server_code_initialized";
  private Boolean isServerCodeInitialized;

  public static final String JSON_PROPERTY_IS_SERVER_OWNER_INITIALIZED = "is_server_owner_initialized";
  private Boolean isServerOwnerInitialized;

  public static final String JSON_PROPERTY_SOFTWARE_TOKEN_INIT_STATUS = "software_token_init_status";
  private TokenInitStatus softwareTokenInitStatus;

  public InitializationStatus() {
  }

  public InitializationStatus isAnchorImported(Boolean isAnchorImported) {
    
    this.isAnchorImported = isAnchorImported;
    return this;
  }

   /**
   * whether a configuration anchor has been imported or not
   * @return isAnchorImported
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_ANCHOR_IMPORTED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsAnchorImported() {
    return isAnchorImported;
  }


  @JsonProperty(JSON_PROPERTY_IS_ANCHOR_IMPORTED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsAnchorImported(Boolean isAnchorImported) {
    this.isAnchorImported = isAnchorImported;
  }


  public InitializationStatus isServerCodeInitialized(Boolean isServerCodeInitialized) {
    
    this.isServerCodeInitialized = isServerCodeInitialized;
    return this;
  }

   /**
   * whether the server code of the security server has been initialized or not
   * @return isServerCodeInitialized
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_SERVER_CODE_INITIALIZED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsServerCodeInitialized() {
    return isServerCodeInitialized;
  }


  @JsonProperty(JSON_PROPERTY_IS_SERVER_CODE_INITIALIZED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsServerCodeInitialized(Boolean isServerCodeInitialized) {
    this.isServerCodeInitialized = isServerCodeInitialized;
  }


  public InitializationStatus isServerOwnerInitialized(Boolean isServerOwnerInitialized) {
    
    this.isServerOwnerInitialized = isServerOwnerInitialized;
    return this;
  }

   /**
   * whether the server owner of the security server has been initialized or not
   * @return isServerOwnerInitialized
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_SERVER_OWNER_INITIALIZED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsServerOwnerInitialized() {
    return isServerOwnerInitialized;
  }


  @JsonProperty(JSON_PROPERTY_IS_SERVER_OWNER_INITIALIZED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsServerOwnerInitialized(Boolean isServerOwnerInitialized) {
    this.isServerOwnerInitialized = isServerOwnerInitialized;
  }


  public InitializationStatus softwareTokenInitStatus(TokenInitStatus softwareTokenInitStatus) {
    
    this.softwareTokenInitStatus = softwareTokenInitStatus;
    return this;
  }

   /**
   * Get softwareTokenInitStatus
   * @return softwareTokenInitStatus
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SOFTWARE_TOKEN_INIT_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TokenInitStatus getSoftwareTokenInitStatus() {
    return softwareTokenInitStatus;
  }


  @JsonProperty(JSON_PROPERTY_SOFTWARE_TOKEN_INIT_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSoftwareTokenInitStatus(TokenInitStatus softwareTokenInitStatus) {
    this.softwareTokenInitStatus = softwareTokenInitStatus;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InitializationStatus initializationStatus = (InitializationStatus) o;
    return Objects.equals(this.isAnchorImported, initializationStatus.isAnchorImported) &&
        Objects.equals(this.isServerCodeInitialized, initializationStatus.isServerCodeInitialized) &&
        Objects.equals(this.isServerOwnerInitialized, initializationStatus.isServerOwnerInitialized) &&
        Objects.equals(this.softwareTokenInitStatus, initializationStatus.softwareTokenInitStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isAnchorImported, isServerCodeInitialized, isServerOwnerInitialized, softwareTokenInitStatus);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InitializationStatus {\n");
    sb.append("    isAnchorImported: ").append(toIndentedString(isAnchorImported)).append("\n");
    sb.append("    isServerCodeInitialized: ").append(toIndentedString(isServerCodeInitialized)).append("\n");
    sb.append("    isServerOwnerInitialized: ").append(toIndentedString(isServerOwnerInitialized)).append("\n");
    sb.append("    softwareTokenInitStatus: ").append(toIndentedString(softwareTokenInitStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

