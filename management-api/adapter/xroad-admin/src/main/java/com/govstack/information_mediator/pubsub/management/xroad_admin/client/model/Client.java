/*
 * X-Road Security Server Admin API
 * X-Road Security Server Admin API. Note that the error metadata responses described in some endpoints are subjects to change and may be updated in upcoming versions.
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: info@niis.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.govstack.information_mediator.pubsub.management.xroad_admin.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.govstack.information_mediator.pubsub.management.xroad_admin.client.model.ClientStatus;
import com.govstack.information_mediator.pubsub.management.xroad_admin.client.model.ConnectionType;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * x-road client
 */
@JsonPropertyOrder({
  Client.JSON_PROPERTY_ID,
  Client.JSON_PROPERTY_INSTANCE_ID,
  Client.JSON_PROPERTY_MEMBER_NAME,
  Client.JSON_PROPERTY_MEMBER_CLASS,
  Client.JSON_PROPERTY_MEMBER_CODE,
  Client.JSON_PROPERTY_SUBSYSTEM_CODE,
  Client.JSON_PROPERTY_OWNER,
  Client.JSON_PROPERTY_HAS_VALID_LOCAL_SIGN_CERT,
  Client.JSON_PROPERTY_CONNECTION_TYPE,
  Client.JSON_PROPERTY_STATUS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Client {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_INSTANCE_ID = "instance_id";
  private String instanceId;

  public static final String JSON_PROPERTY_MEMBER_NAME = "member_name";
  private String memberName;

  public static final String JSON_PROPERTY_MEMBER_CLASS = "member_class";
  private String memberClass;

  public static final String JSON_PROPERTY_MEMBER_CODE = "member_code";
  private String memberCode;

  public static final String JSON_PROPERTY_SUBSYSTEM_CODE = "subsystem_code";
  private String subsystemCode;

  public static final String JSON_PROPERTY_OWNER = "owner";
  private Boolean owner;

  public static final String JSON_PROPERTY_HAS_VALID_LOCAL_SIGN_CERT = "has_valid_local_sign_cert";
  private Boolean hasValidLocalSignCert;

  public static final String JSON_PROPERTY_CONNECTION_TYPE = "connection_type";
  private ConnectionType connectionType = ConnectionType.HTTPS;

  public static final String JSON_PROPERTY_STATUS = "status";
  private ClientStatus status;

  public Client() {
  }

  @JsonCreator
  public Client(
    @JsonProperty(JSON_PROPERTY_ID) String id, 
    @JsonProperty(JSON_PROPERTY_INSTANCE_ID) String instanceId, 
    @JsonProperty(JSON_PROPERTY_MEMBER_NAME) String memberName, 
    @JsonProperty(JSON_PROPERTY_OWNER) Boolean owner, 
    @JsonProperty(JSON_PROPERTY_HAS_VALID_LOCAL_SIGN_CERT) Boolean hasValidLocalSignCert
  ) {
    this();
    this.id = id;
    this.instanceId = instanceId;
    this.memberName = memberName;
    this.owner = owner;
    this.hasValidLocalSignCert = hasValidLocalSignCert;
  }

   /**
   * &lt;instance_id&gt;:&lt;member_class&gt;:&lt;member_code&gt;:&lt;subsystem&gt;(optional). Cannot contain colons, semicolons, slashes, backslashes, percent signs or control characters
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }




   /**
   * Xroad instance id. Cannot contain colons, semicolons, slashes, backslashes, percent signs or control characters
   * @return instanceId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSTANCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInstanceId() {
    return instanceId;
  }




   /**
   * Member name. Cannot contain colons, semicolons, slashes, backslashes, percent signs or control characters
   * @return memberName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MEMBER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMemberName() {
    return memberName;
  }




  public Client memberClass(String memberClass) {
    
    this.memberClass = memberClass;
    return this;
  }

   /**
   * Member class. Cannot contain colons, semicolons, slashes, backslashes, percent signs or control characters
   * @return memberClass
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MEMBER_CLASS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMemberClass() {
    return memberClass;
  }


  @JsonProperty(JSON_PROPERTY_MEMBER_CLASS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMemberClass(String memberClass) {
    this.memberClass = memberClass;
  }


  public Client memberCode(String memberCode) {
    
    this.memberCode = memberCode;
    return this;
  }

   /**
   * Member code. Cannot contain colons, semicolons, slashes, backslashes, percent signs or control characters
   * @return memberCode
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MEMBER_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMemberCode() {
    return memberCode;
  }


  @JsonProperty(JSON_PROPERTY_MEMBER_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMemberCode(String memberCode) {
    this.memberCode = memberCode;
  }


  public Client subsystemCode(String subsystemCode) {
    
    this.subsystemCode = subsystemCode;
    return this;
  }

   /**
   * Subsystem code. Cannot contain colons, semicolons, slashes, backslashes, percent signs or control characters
   * @return subsystemCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBSYSTEM_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubsystemCode() {
    return subsystemCode;
  }


  @JsonProperty(JSON_PROPERTY_SUBSYSTEM_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubsystemCode(String subsystemCode) {
    this.subsystemCode = subsystemCode;
  }


   /**
   * if this client is the owner member of this security server
   * @return owner
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OWNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOwner() {
    return owner;
  }




   /**
   * if this client has a valid (registered and with good OCSP response) sign cert stored on this security server
   * @return hasValidLocalSignCert
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HAS_VALID_LOCAL_SIGN_CERT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasValidLocalSignCert() {
    return hasValidLocalSignCert;
  }




  public Client connectionType(ConnectionType connectionType) {
    
    this.connectionType = connectionType;
    return this;
  }

   /**
   * Get connectionType
   * @return connectionType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONNECTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConnectionType getConnectionType() {
    return connectionType;
  }


  @JsonProperty(JSON_PROPERTY_CONNECTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConnectionType(ConnectionType connectionType) {
    this.connectionType = connectionType;
  }


  public Client status(ClientStatus status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ClientStatus getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(ClientStatus status) {
    this.status = status;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Client client = (Client) o;
    return Objects.equals(this.id, client.id) &&
        Objects.equals(this.instanceId, client.instanceId) &&
        Objects.equals(this.memberName, client.memberName) &&
        Objects.equals(this.memberClass, client.memberClass) &&
        Objects.equals(this.memberCode, client.memberCode) &&
        Objects.equals(this.subsystemCode, client.subsystemCode) &&
        Objects.equals(this.owner, client.owner) &&
        Objects.equals(this.hasValidLocalSignCert, client.hasValidLocalSignCert) &&
        Objects.equals(this.connectionType, client.connectionType) &&
        Objects.equals(this.status, client.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, instanceId, memberName, memberClass, memberCode, subsystemCode, owner, hasValidLocalSignCert, connectionType, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Client {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    memberName: ").append(toIndentedString(memberName)).append("\n");
    sb.append("    memberClass: ").append(toIndentedString(memberClass)).append("\n");
    sb.append("    memberCode: ").append(toIndentedString(memberCode)).append("\n");
    sb.append("    subsystemCode: ").append(toIndentedString(subsystemCode)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    hasValidLocalSignCert: ").append(toIndentedString(hasValidLocalSignCert)).append("\n");
    sb.append("    connectionType: ").append(toIndentedString(connectionType)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

