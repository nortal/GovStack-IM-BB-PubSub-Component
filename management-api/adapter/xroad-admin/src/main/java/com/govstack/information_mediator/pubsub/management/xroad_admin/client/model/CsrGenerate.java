/*
 * X-Road Security Server Admin API
 * X-Road Security Server Admin API. Note that the error metadata responses described in some endpoints are subjects to change and may be updated in upcoming versions.
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: info@niis.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.govstack.information_mediator.pubsub.management.xroad_admin.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.govstack.information_mediator.pubsub.management.xroad_admin.client.model.CsrFormat;
import com.govstack.information_mediator.pubsub.management.xroad_admin.client.model.KeyUsageType;
import java.util.HashMap;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * request to generate a CSR
 */
@JsonPropertyOrder({
  CsrGenerate.JSON_PROPERTY_KEY_USAGE_TYPE,
  CsrGenerate.JSON_PROPERTY_CA_NAME,
  CsrGenerate.JSON_PROPERTY_CSR_FORMAT,
  CsrGenerate.JSON_PROPERTY_MEMBER_ID,
  CsrGenerate.JSON_PROPERTY_SUBJECT_FIELD_VALUES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CsrGenerate {
  public static final String JSON_PROPERTY_KEY_USAGE_TYPE = "key_usage_type";
  private KeyUsageType keyUsageType;

  public static final String JSON_PROPERTY_CA_NAME = "ca_name";
  private String caName;

  public static final String JSON_PROPERTY_CSR_FORMAT = "csr_format";
  private CsrFormat csrFormat = CsrFormat.PEM;

  public static final String JSON_PROPERTY_MEMBER_ID = "member_id";
  private String memberId;

  public static final String JSON_PROPERTY_SUBJECT_FIELD_VALUES = "subject_field_values";
  private Map<String, String> subjectFieldValues = new HashMap<>();

  public CsrGenerate() {
  }

  public CsrGenerate keyUsageType(KeyUsageType keyUsageType) {
    
    this.keyUsageType = keyUsageType;
    return this;
  }

   /**
   * Get keyUsageType
   * @return keyUsageType
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_KEY_USAGE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public KeyUsageType getKeyUsageType() {
    return keyUsageType;
  }


  @JsonProperty(JSON_PROPERTY_KEY_USAGE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setKeyUsageType(KeyUsageType keyUsageType) {
    this.keyUsageType = keyUsageType;
  }


  public CsrGenerate caName(String caName) {
    
    this.caName = caName;
    return this;
  }

   /**
   * common name of the CA
   * @return caName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CA_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCaName() {
    return caName;
  }


  @JsonProperty(JSON_PROPERTY_CA_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCaName(String caName) {
    this.caName = caName;
  }


  public CsrGenerate csrFormat(CsrFormat csrFormat) {
    
    this.csrFormat = csrFormat;
    return this;
  }

   /**
   * Get csrFormat
   * @return csrFormat
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CSR_FORMAT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CsrFormat getCsrFormat() {
    return csrFormat;
  }


  @JsonProperty(JSON_PROPERTY_CSR_FORMAT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCsrFormat(CsrFormat csrFormat) {
    this.csrFormat = csrFormat;
  }


  public CsrGenerate memberId(String memberId) {
    
    this.memberId = memberId;
    return this;
  }

   /**
   * member client id for signing CSRs. &lt;instance_id&gt;:&lt;member_class&gt;:&lt;member_code&gt;
   * @return memberId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MEMBER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMemberId() {
    return memberId;
  }


  @JsonProperty(JSON_PROPERTY_MEMBER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMemberId(String memberId) {
    this.memberId = memberId;
  }


  public CsrGenerate subjectFieldValues(Map<String, String> subjectFieldValues) {
    
    this.subjectFieldValues = subjectFieldValues;
    return this;
  }

  public CsrGenerate putSubjectFieldValuesItem(String key, String subjectFieldValuesItem) {
    this.subjectFieldValues.put(key, subjectFieldValuesItem);
    return this;
  }

   /**
   * user-provided values for subject DN parameters
   * @return subjectFieldValues
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SUBJECT_FIELD_VALUES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Map<String, String> getSubjectFieldValues() {
    return subjectFieldValues;
  }


  @JsonProperty(JSON_PROPERTY_SUBJECT_FIELD_VALUES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSubjectFieldValues(Map<String, String> subjectFieldValues) {
    this.subjectFieldValues = subjectFieldValues;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CsrGenerate csrGenerate = (CsrGenerate) o;
    return Objects.equals(this.keyUsageType, csrGenerate.keyUsageType) &&
        Objects.equals(this.caName, csrGenerate.caName) &&
        Objects.equals(this.csrFormat, csrGenerate.csrFormat) &&
        Objects.equals(this.memberId, csrGenerate.memberId) &&
        Objects.equals(this.subjectFieldValues, csrGenerate.subjectFieldValues);
  }

  @Override
  public int hashCode() {
    return Objects.hash(keyUsageType, caName, csrFormat, memberId, subjectFieldValues);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CsrGenerate {\n");
    sb.append("    keyUsageType: ").append(toIndentedString(keyUsageType)).append("\n");
    sb.append("    caName: ").append(toIndentedString(caName)).append("\n");
    sb.append("    csrFormat: ").append(toIndentedString(csrFormat)).append("\n");
    sb.append("    memberId: ").append(toIndentedString(memberId)).append("\n");
    sb.append("    subjectFieldValues: ").append(toIndentedString(subjectFieldValues)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

