/*
 * X-Road Security Server Admin API
 * X-Road Security Server Admin API. Note that the error metadata responses described in some endpoints are subjects to change and may be updated in upcoming versions.
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: info@niis.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.govstack.information_mediator.pubsub.management.xroad_admin.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.govstack.information_mediator.pubsub.management.xroad_admin.client.model.Service;
import com.govstack.information_mediator.pubsub.management.xroad_admin.client.model.ServiceType;
import java.time.OffsetDateTime;
import java.util.LinkedHashSet;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * WSDL/OPENAPI3/REST service
 */
@JsonPropertyOrder({
  ServiceDescription.JSON_PROPERTY_ID,
  ServiceDescription.JSON_PROPERTY_URL,
  ServiceDescription.JSON_PROPERTY_TYPE,
  ServiceDescription.JSON_PROPERTY_DISABLED,
  ServiceDescription.JSON_PROPERTY_DISABLED_NOTICE,
  ServiceDescription.JSON_PROPERTY_REFRESHED_AT,
  ServiceDescription.JSON_PROPERTY_SERVICES,
  ServiceDescription.JSON_PROPERTY_CLIENT_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ServiceDescription {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_URL = "url";
  private String url;

  public static final String JSON_PROPERTY_TYPE = "type";
  private ServiceType type;

  public static final String JSON_PROPERTY_DISABLED = "disabled";
  private Boolean disabled;

  public static final String JSON_PROPERTY_DISABLED_NOTICE = "disabled_notice";
  private String disabledNotice;

  public static final String JSON_PROPERTY_REFRESHED_AT = "refreshed_at";
  private OffsetDateTime refreshedAt;

  public static final String JSON_PROPERTY_SERVICES = "services";
  private Set<Service> services = new LinkedHashSet<>();

  public static final String JSON_PROPERTY_CLIENT_ID = "client_id";
  private String clientId;

  public ServiceDescription() {
  }

  public ServiceDescription id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * unique identifier
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public ServiceDescription url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * service url
   * @return url
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUrl() {
    return url;
  }


  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUrl(String url) {
    this.url = url;
  }


  public ServiceDescription type(ServiceType type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ServiceType getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(ServiceType type) {
    this.type = type;
  }


  public ServiceDescription disabled(Boolean disabled) {
    
    this.disabled = disabled;
    return this;
  }

   /**
   * service disabled
   * @return disabled
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DISABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getDisabled() {
    return disabled;
  }


  @JsonProperty(JSON_PROPERTY_DISABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDisabled(Boolean disabled) {
    this.disabled = disabled;
  }


  public ServiceDescription disabledNotice(String disabledNotice) {
    
    this.disabledNotice = disabledNotice;
    return this;
  }

   /**
   * disabled notice
   * @return disabledNotice
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DISABLED_NOTICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDisabledNotice() {
    return disabledNotice;
  }


  @JsonProperty(JSON_PROPERTY_DISABLED_NOTICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDisabledNotice(String disabledNotice) {
    this.disabledNotice = disabledNotice;
  }


  public ServiceDescription refreshedAt(OffsetDateTime refreshedAt) {
    
    this.refreshedAt = refreshedAt;
    return this;
  }

   /**
   * time for service refresh
   * @return refreshedAt
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REFRESHED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getRefreshedAt() {
    return refreshedAt;
  }


  @JsonProperty(JSON_PROPERTY_REFRESHED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRefreshedAt(OffsetDateTime refreshedAt) {
    this.refreshedAt = refreshedAt;
  }


  public ServiceDescription services(Set<Service> services) {
    
    this.services = services;
    return this;
  }

  public ServiceDescription addServicesItem(Service servicesItem) {
    if (this.services == null) {
      this.services = new LinkedHashSet<>();
    }
    this.services.add(servicesItem);
    return this;
  }

   /**
   * service description services
   * @return services
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SERVICES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Set<Service> getServices() {
    return services;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_SERVICES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setServices(Set<Service> services) {
    this.services = services;
  }


  public ServiceDescription clientId(String clientId) {
    
    this.clientId = clientId;
    return this;
  }

   /**
   * &lt;instance_id&gt;:&lt;member_class&gt;:&lt;member_code&gt;:&lt;subsystem&gt;(optional)
   * @return clientId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CLIENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getClientId() {
    return clientId;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setClientId(String clientId) {
    this.clientId = clientId;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceDescription serviceDescription = (ServiceDescription) o;
    return Objects.equals(this.id, serviceDescription.id) &&
        Objects.equals(this.url, serviceDescription.url) &&
        Objects.equals(this.type, serviceDescription.type) &&
        Objects.equals(this.disabled, serviceDescription.disabled) &&
        Objects.equals(this.disabledNotice, serviceDescription.disabledNotice) &&
        Objects.equals(this.refreshedAt, serviceDescription.refreshedAt) &&
        Objects.equals(this.services, serviceDescription.services) &&
        Objects.equals(this.clientId, serviceDescription.clientId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, url, type, disabled, disabledNotice, refreshedAt, services, clientId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceDescription {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
    sb.append("    disabledNotice: ").append(toIndentedString(disabledNotice)).append("\n");
    sb.append("    refreshedAt: ").append(toIndentedString(refreshedAt)).append("\n");
    sb.append("    services: ").append(toIndentedString(services)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

