/*
 * X-Road Security Server Admin API
 * X-Road Security Server Admin API. Note that the error metadata responses described in some endpoints are subjects to change and may be updated in upcoming versions.
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: info@niis.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.govstack.information_mediator.pubsub.management.xroad_admin.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.LinkedHashSet;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * message log archive encryption member
 */
@JsonPropertyOrder({
  MessageLogArchiveEncryptionMember.JSON_PROPERTY_MEMBER_ID,
  MessageLogArchiveEncryptionMember.JSON_PROPERTY_KEYS,
  MessageLogArchiveEncryptionMember.JSON_PROPERTY_DEFAULT_KEY_USED
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class MessageLogArchiveEncryptionMember {
  public static final String JSON_PROPERTY_MEMBER_ID = "member_id";
  private String memberId;

  public static final String JSON_PROPERTY_KEYS = "keys";
  private Set<String> keys;

  public static final String JSON_PROPERTY_DEFAULT_KEY_USED = "default_key_used";
  private Boolean defaultKeyUsed;

  public MessageLogArchiveEncryptionMember() {
  }

  @JsonCreator
  public MessageLogArchiveEncryptionMember(
    @JsonProperty(JSON_PROPERTY_MEMBER_ID) String memberId, 
    @JsonProperty(JSON_PROPERTY_KEYS) Set<String> keys, 
    @JsonProperty(JSON_PROPERTY_DEFAULT_KEY_USED) Boolean defaultKeyUsed
  ) {
    this();
    this.memberId = memberId;
    this.keys = keys;
    this.defaultKeyUsed = defaultKeyUsed;
  }

   /**
   * Get memberId
   * @return memberId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MEMBER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMemberId() {
    return memberId;
  }




   /**
   * Get keys
   * @return keys
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_KEYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<String> getKeys() {
    return keys;
  }




   /**
   * Get defaultKeyUsed
   * @return defaultKeyUsed
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEFAULT_KEY_USED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDefaultKeyUsed() {
    return defaultKeyUsed;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MessageLogArchiveEncryptionMember messageLogArchiveEncryptionMember = (MessageLogArchiveEncryptionMember) o;
    return Objects.equals(this.memberId, messageLogArchiveEncryptionMember.memberId) &&
        Objects.equals(this.keys, messageLogArchiveEncryptionMember.keys) &&
        Objects.equals(this.defaultKeyUsed, messageLogArchiveEncryptionMember.defaultKeyUsed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(memberId, keys, defaultKeyUsed);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MessageLogArchiveEncryptionMember {\n");
    sb.append("    memberId: ").append(toIndentedString(memberId)).append("\n");
    sb.append("    keys: ").append(toIndentedString(keys)).append("\n");
    sb.append("    defaultKeyUsed: ").append(toIndentedString(defaultKeyUsed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

