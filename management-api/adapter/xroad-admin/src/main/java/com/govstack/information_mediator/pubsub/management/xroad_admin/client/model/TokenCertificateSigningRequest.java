/*
 * X-Road Security Server Admin API
 * X-Road Security Server Admin API. Note that the error metadata responses described in some endpoints are subjects to change and may be updated in upcoming versions.
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: info@niis.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.govstack.information_mediator.pubsub.management.xroad_admin.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.govstack.information_mediator.pubsub.management.xroad_admin.client.model.PossibleAction;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CSR for certificate that is stored in a Token. Also includes the possible actions that can be done to this object, e.g DELETE (only for csr related operations and does not consider user authorization).
 */
@JsonPropertyOrder({
  TokenCertificateSigningRequest.JSON_PROPERTY_ID,
  TokenCertificateSigningRequest.JSON_PROPERTY_OWNER_ID,
  TokenCertificateSigningRequest.JSON_PROPERTY_POSSIBLE_ACTIONS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class TokenCertificateSigningRequest {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_OWNER_ID = "owner_id";
  private String ownerId;

  public static final String JSON_PROPERTY_POSSIBLE_ACTIONS = "possible_actions";
  private List<PossibleAction> possibleActions = new ArrayList<>();

  public TokenCertificateSigningRequest() {
  }

  @JsonCreator
  public TokenCertificateSigningRequest(
    @JsonProperty(JSON_PROPERTY_ID) String id, 
    @JsonProperty(JSON_PROPERTY_OWNER_ID) String ownerId
  ) {
    this();
    this.id = id;
    this.ownerId = ownerId;
  }

   /**
   * CSR id
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }




   /**
   * client id of the owner member, &lt;instance_id&gt;:&lt;member_class&gt;:&lt;member_code&gt;
   * @return ownerId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OWNER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getOwnerId() {
    return ownerId;
  }




  public TokenCertificateSigningRequest possibleActions(List<PossibleAction> possibleActions) {
    
    this.possibleActions = possibleActions;
    return this;
  }

  public TokenCertificateSigningRequest addPossibleActionsItem(PossibleAction possibleActionsItem) {
    if (this.possibleActions == null) {
      this.possibleActions = new ArrayList<>();
    }
    this.possibleActions.add(possibleActionsItem);
    return this;
  }

   /**
   * array containing the possible actions that can be done for this item
   * @return possibleActions
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_POSSIBLE_ACTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<PossibleAction> getPossibleActions() {
    return possibleActions;
  }


  @JsonProperty(JSON_PROPERTY_POSSIBLE_ACTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPossibleActions(List<PossibleAction> possibleActions) {
    this.possibleActions = possibleActions;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TokenCertificateSigningRequest tokenCertificateSigningRequest = (TokenCertificateSigningRequest) o;
    return Objects.equals(this.id, tokenCertificateSigningRequest.id) &&
        Objects.equals(this.ownerId, tokenCertificateSigningRequest.ownerId) &&
        Objects.equals(this.possibleActions, tokenCertificateSigningRequest.possibleActions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, ownerId, possibleActions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TokenCertificateSigningRequest {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    ownerId: ").append(toIndentedString(ownerId)).append("\n");
    sb.append("    possibleActions: ").append(toIndentedString(possibleActions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

