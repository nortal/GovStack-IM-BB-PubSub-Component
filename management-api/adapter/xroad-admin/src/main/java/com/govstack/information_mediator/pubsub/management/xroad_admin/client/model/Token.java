/*
 * X-Road Security Server Admin API
 * X-Road Security Server Admin API. Note that the error metadata responses described in some endpoints are subjects to change and may be updated in upcoming versions.
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: info@niis.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.govstack.information_mediator.pubsub.management.xroad_admin.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.govstack.information_mediator.pubsub.management.xroad_admin.client.model.Key;
import com.govstack.information_mediator.pubsub.management.xroad_admin.client.model.KeyValuePair;
import com.govstack.information_mediator.pubsub.management.xroad_admin.client.model.PossibleAction;
import com.govstack.information_mediator.pubsub.management.xroad_admin.client.model.TokenStatus;
import com.govstack.information_mediator.pubsub.management.xroad_admin.client.model.TokenType;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Token. Also includes the possible actions that can be done to this object, e.g DELETE (only for token related operations and does not consider user authorization).
 */
@JsonPropertyOrder({
  Token.JSON_PROPERTY_ID,
  Token.JSON_PROPERTY_NAME,
  Token.JSON_PROPERTY_TYPE,
  Token.JSON_PROPERTY_KEYS,
  Token.JSON_PROPERTY_STATUS,
  Token.JSON_PROPERTY_LOGGED_IN,
  Token.JSON_PROPERTY_AVAILABLE,
  Token.JSON_PROPERTY_SAVED_TO_CONFIGURATION,
  Token.JSON_PROPERTY_READ_ONLY,
  Token.JSON_PROPERTY_SERIAL_NUMBER,
  Token.JSON_PROPERTY_TOKEN_INFOS,
  Token.JSON_PROPERTY_POSSIBLE_ACTIONS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Token {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_TYPE = "type";
  private TokenType type;

  public static final String JSON_PROPERTY_KEYS = "keys";
  private Set<Key> keys = new LinkedHashSet<>();

  public static final String JSON_PROPERTY_STATUS = "status";
  private TokenStatus status;

  public static final String JSON_PROPERTY_LOGGED_IN = "logged_in";
  private Boolean loggedIn;

  public static final String JSON_PROPERTY_AVAILABLE = "available";
  private Boolean available;

  public static final String JSON_PROPERTY_SAVED_TO_CONFIGURATION = "saved_to_configuration";
  private Boolean savedToConfiguration;

  public static final String JSON_PROPERTY_READ_ONLY = "read_only";
  private Boolean readOnly;

  public static final String JSON_PROPERTY_SERIAL_NUMBER = "serial_number";
  private String serialNumber;

  public static final String JSON_PROPERTY_TOKEN_INFOS = "token_infos";
  private List<KeyValuePair> tokenInfos;

  public static final String JSON_PROPERTY_POSSIBLE_ACTIONS = "possible_actions";
  private List<PossibleAction> possibleActions;

  public Token() {
  }

  @JsonCreator
  public Token(
    @JsonProperty(JSON_PROPERTY_ID) String id
  ) {
    this();
    this.id = id;
  }

   /**
   * token id
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }




  public Token name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * token name
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public Token type(TokenType type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TokenType getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(TokenType type) {
    this.type = type;
  }


  public Token keys(Set<Key> keys) {
    
    this.keys = keys;
    return this;
  }

  public Token addKeysItem(Key keysItem) {
    if (this.keys == null) {
      this.keys = new LinkedHashSet<>();
    }
    this.keys.add(keysItem);
    return this;
  }

   /**
   * token keys
   * @return keys
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_KEYS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Set<Key> getKeys() {
    return keys;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_KEYS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setKeys(Set<Key> keys) {
    this.keys = keys;
  }


  public Token status(TokenStatus status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TokenStatus getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(TokenStatus status) {
    this.status = status;
  }


  public Token loggedIn(Boolean loggedIn) {
    
    this.loggedIn = loggedIn;
    return this;
  }

   /**
   * if the token has been logged in to
   * @return loggedIn
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LOGGED_IN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getLoggedIn() {
    return loggedIn;
  }


  @JsonProperty(JSON_PROPERTY_LOGGED_IN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLoggedIn(Boolean loggedIn) {
    this.loggedIn = loggedIn;
  }


  public Token available(Boolean available) {
    
    this.available = available;
    return this;
  }

   /**
   * if the token is available
   * @return available
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AVAILABLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getAvailable() {
    return available;
  }


  @JsonProperty(JSON_PROPERTY_AVAILABLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAvailable(Boolean available) {
    this.available = available;
  }


  public Token savedToConfiguration(Boolean savedToConfiguration) {
    
    this.savedToConfiguration = savedToConfiguration;
    return this;
  }

   /**
   * if the token is saved to configuration
   * @return savedToConfiguration
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SAVED_TO_CONFIGURATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getSavedToConfiguration() {
    return savedToConfiguration;
  }


  @JsonProperty(JSON_PROPERTY_SAVED_TO_CONFIGURATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSavedToConfiguration(Boolean savedToConfiguration) {
    this.savedToConfiguration = savedToConfiguration;
  }


  public Token readOnly(Boolean readOnly) {
    
    this.readOnly = readOnly;
    return this;
  }

   /**
   * if the token is read-only
   * @return readOnly
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_READ_ONLY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getReadOnly() {
    return readOnly;
  }


  @JsonProperty(JSON_PROPERTY_READ_ONLY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReadOnly(Boolean readOnly) {
    this.readOnly = readOnly;
  }


  public Token serialNumber(String serialNumber) {
    
    this.serialNumber = serialNumber;
    return this;
  }

   /**
   * serial number of the token
   * @return serialNumber
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SERIAL_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSerialNumber() {
    return serialNumber;
  }


  @JsonProperty(JSON_PROPERTY_SERIAL_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSerialNumber(String serialNumber) {
    this.serialNumber = serialNumber;
  }


  public Token tokenInfos(List<KeyValuePair> tokenInfos) {
    
    this.tokenInfos = tokenInfos;
    return this;
  }

  public Token addTokenInfosItem(KeyValuePair tokenInfosItem) {
    if (this.tokenInfos == null) {
      this.tokenInfos = new ArrayList<>();
    }
    this.tokenInfos.add(tokenInfosItem);
    return this;
  }

   /**
   * Contains label-value pairs of information
   * @return tokenInfos
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOKEN_INFOS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<KeyValuePair> getTokenInfos() {
    return tokenInfos;
  }


  @JsonProperty(JSON_PROPERTY_TOKEN_INFOS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTokenInfos(List<KeyValuePair> tokenInfos) {
    this.tokenInfos = tokenInfos;
  }


  public Token possibleActions(List<PossibleAction> possibleActions) {
    
    this.possibleActions = possibleActions;
    return this;
  }

  public Token addPossibleActionsItem(PossibleAction possibleActionsItem) {
    if (this.possibleActions == null) {
      this.possibleActions = new ArrayList<>();
    }
    this.possibleActions.add(possibleActionsItem);
    return this;
  }

   /**
   * array containing the possible actions that can be done for this item
   * @return possibleActions
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSSIBLE_ACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PossibleAction> getPossibleActions() {
    return possibleActions;
  }


  @JsonProperty(JSON_PROPERTY_POSSIBLE_ACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPossibleActions(List<PossibleAction> possibleActions) {
    this.possibleActions = possibleActions;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Token token = (Token) o;
    return Objects.equals(this.id, token.id) &&
        Objects.equals(this.name, token.name) &&
        Objects.equals(this.type, token.type) &&
        Objects.equals(this.keys, token.keys) &&
        Objects.equals(this.status, token.status) &&
        Objects.equals(this.loggedIn, token.loggedIn) &&
        Objects.equals(this.available, token.available) &&
        Objects.equals(this.savedToConfiguration, token.savedToConfiguration) &&
        Objects.equals(this.readOnly, token.readOnly) &&
        Objects.equals(this.serialNumber, token.serialNumber) &&
        Objects.equals(this.tokenInfos, token.tokenInfos) &&
        Objects.equals(this.possibleActions, token.possibleActions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, type, keys, status, loggedIn, available, savedToConfiguration, readOnly, serialNumber, tokenInfos, possibleActions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Token {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    keys: ").append(toIndentedString(keys)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    loggedIn: ").append(toIndentedString(loggedIn)).append("\n");
    sb.append("    available: ").append(toIndentedString(available)).append("\n");
    sb.append("    savedToConfiguration: ").append(toIndentedString(savedToConfiguration)).append("\n");
    sb.append("    readOnly: ").append(toIndentedString(readOnly)).append("\n");
    sb.append("    serialNumber: ").append(toIndentedString(serialNumber)).append("\n");
    sb.append("    tokenInfos: ").append(toIndentedString(tokenInfos)).append("\n");
    sb.append("    possibleActions: ").append(toIndentedString(possibleActions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

