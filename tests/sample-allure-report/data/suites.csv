"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Thu Oct 12 13:06:29 EEST 2023","Thu Oct 12 13:06:29 EEST 2023","317","GenericSpecification","DeleteRoomTests","","com.govstack.information_mediator.pubsub.api.management.rooms.DeleteRoomTests","Given: a manager with a room; When: manager terminates the room with a problem: 'X-Road-Client' header missing; Then: terminating room fails with 403: Forbidden","Given: a manager with a room; When: manager terminates the room with a problem: 'X-Road-Client' header missing; Then: terminating room fails with 403: Forbidden",""
"passed","Thu Oct 12 13:06:46 EEST 2023","Thu Oct 12 13:06:47 EEST 2023","151","GenericSpecification","SubscribeTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.SubscribeTests","Given: an active room with event type; When: member subscribes with problem: non-existent event type; Then: subscribe fails with 404","Given: an active room with event type; When: member subscribes with problem: non-existent event type; Then: subscribe fails with 404",""
"passed","Thu Oct 12 13:06:45 EEST 2023","Thu Oct 12 13:06:45 EEST 2023","160","GenericSpecification","SubscribeTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.SubscribeTests","Given: an active room with event type; When: member subscribes with data: [method:PUSH, pushUrl:https://host/url, deliveryAttempts:100]; Then: subscribe succeeds and correct data is saved","Given: an active room with event type; When: member subscribes with data: [method:PUSH, pushUrl:https://host/url, deliveryAttempts:100]; Then: subscribe succeeds and correct data is saved",""
"passed","Thu Oct 12 13:07:07 EEST 2023","Thu Oct 12 13:07:07 EEST 2023","1","GenericSpecification","EventsTests","","com.govstack.information_mediator.pubsub.ui.EventsTests","Given: a room with events (where active event type, event type version and publisher); When: user opens event details; Then: Event (identifier, correlation id, created at), Event Type (identifier, version number, version JSON schema), Publisher (identifier, identifier type) are displayed","Given: a room with events (where active event type, event type version and publisher); When: user opens event details; Then: Event (identifier, correlation id, created at), Event Type (identifier, version number, version JSON schema), Publisher (identifier, identifier type) are displayed",""
"passed","Thu Oct 12 13:08:15 EEST 2023","Thu Oct 12 13:08:15 EEST 2023","0","GenericSpecification","RoomListTests","","com.govstack.information_mediator.pubsub.ui.RoomListTests","Given: rooms exist and manager is logged in; When: manager opens 'Rooms List' page; Then: managers' rooms are listed","Given: rooms exist and manager is logged in; When: manager opens 'Rooms List' page; Then: managers' rooms are listed",""
"passed","Thu Oct 12 13:07:32 EEST 2023","Thu Oct 12 13:07:37 EEST 2023","5183","GenericSpecification","LoginTests","","com.govstack.information_mediator.pubsub.ui.LoginTests","Given: user logged into management-ui; When: user logs out; Then: user redirected to management-ui login page","Given: user logged into management-ui; When: user logs out; Then: user redirected to management-ui login page",""
"passed","Thu Oct 12 13:06:17 EEST 2023","Thu Oct 12 13:06:17 EEST 2023","4","GenericSpecification","DeleteEventTypesTests","","com.govstack.information_mediator.pubsub.api.management.event_types.DeleteEventTypesTests","Given: a room with event type; When: manager terminates event type; Then: event type is terminated and related entities (event type versions, publishers, subscriptions) terminated","Given: a room with event type; When: manager terminates event type; Then: event type is terminated and related entities (event type versions, publishers, subscriptions) terminated",""
"passed","Thu Oct 12 13:06:50 EEST 2023","Thu Oct 12 13:06:52 EEST 2023","2608","GenericSpecification","PublishTests","","com.govstack.information_mediator.pubsub.api.messaging.PublishTests","Given: an event type with no subscriptions; When: message is published; Then: publish succeeds and event is created and no message is published","Given: an event type with no subscriptions; When: message is published; Then: publish succeeds and event is created and no message is published",""
"passed","Thu Oct 12 13:06:56 EEST 2023","Thu Oct 12 13:07:00 EEST 2023","4180","GenericSpecification","PublishTests","","com.govstack.information_mediator.pubsub.api.messaging.PublishTests","Given: an event type with 10 active PUSH subscriptions; When: message is published; Then: publish succeeds and 1 event is created, published and delivered to 10 subscribers","Given: an event type with 10 active PUSH subscriptions; When: message is published; Then: publish succeeds and 1 event is created, published and delivered to 10 subscribers",""
"passed","Thu Oct 12 13:06:44 EEST 2023","Thu Oct 12 13:06:45 EEST 2023","186","GenericSpecification","SubscribeTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.SubscribeTests","Given: an active room with event type; When: member subscribes with data: [method:PUSH, pushUrl:https://host/url]; Then: subscribe succeeds and correct data is saved","Given: an active room with event type; When: member subscribes with data: [method:PUSH, pushUrl:https://host/url]; Then: subscribe succeeds and correct data is saved",""
"passed","Thu Oct 12 13:08:15 EEST 2023","Thu Oct 12 13:08:15 EEST 2023","1","GenericSpecification","PublisherTests","","com.govstack.information_mediator.pubsub.ui.PublisherTests","Given: room with publishers; When: user opens publishers' event types; Then: publishers' event types are listed","Given: room with publishers; When: user opens publishers' event types; Then: publishers' event types are listed",""
"passed","Thu Oct 12 13:06:29 EEST 2023","Thu Oct 12 13:06:29 EEST 2023","271","GenericSpecification","DeleteRoomTests","","com.govstack.information_mediator.pubsub.api.management.rooms.DeleteRoomTests","Given: a manager with a room; When: manager terminates the room with a problem: non-existent room; Then: terminating room fails with 404: Room was not found","Given: a manager with a room; When: manager terminates the room with a problem: non-existent room; Then: terminating room fails with 404: Room was not found",""
"passed","Thu Oct 12 13:07:02 EEST 2023","Thu Oct 12 13:07:02 EEST 2023","191","GenericSpecification","PublishTests","","com.govstack.information_mediator.pubsub.api.messaging.PublishTests","Given: an event type; When: a message missing 'content'; Then: publish fails with 'Invalid data for publishing event'","Given: an event type; When: a message missing 'content'; Then: publish fails with 'Invalid data for publishing event'",""
"passed","Thu Oct 12 13:08:16 EEST 2023","Thu Oct 12 13:08:16 EEST 2023","1","GenericSpecification","SubscriptionTests","","com.govstack.information_mediator.pubsub.ui.SubscriptionTests","Given: a room with subscription method PULL exists and event published to room, but not pulled or expired; When: user opens subscription details; Then: event shown as PUBLISHED under 'Published events'","Given: a room with subscription method PULL exists and event published to room, but not pulled or expired; When: user opens subscription details; Then: event shown as PUBLISHED under 'Published events'",""
"passed","Thu Oct 12 13:06:45 EEST 2023","Thu Oct 12 13:06:45 EEST 2023","177","GenericSpecification","SubscribeTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.SubscribeTests","Given: an active room with event type; When: member subscribes with data: [method:PUSH, pushUrl:https://host/url, deliveryDelay:100]; Then: subscribe succeeds and correct data is saved","Given: an active room with event type; When: member subscribes with data: [method:PUSH, pushUrl:https://host/url, deliveryDelay:100]; Then: subscribe succeeds and correct data is saved",""
"passed","Thu Oct 12 13:07:00 EEST 2023","Thu Oct 12 13:07:01 EEST 2023","177","GenericSpecification","PublishTests","","com.govstack.information_mediator.pubsub.api.messaging.PublishTests","Given: an event type; When: a message with problem 'non-existent event type' is published; Then: publish fails with 404: 'Event Type was not found' ","Given: an event type; When: a message with problem 'non-existent event type' is published; Then: publish fails with 404: 'Event Type was not found' ",""
"passed","Thu Oct 12 13:06:25 EEST 2023","Thu Oct 12 13:06:28 EEST 2023","3103","GenericSpecification","DeleteRoomTests","","com.govstack.information_mediator.pubsub.api.management.rooms.DeleteRoomTests","Given: a manager with a room; When: manager terminates the room with a problem: non-existent manager; Then: terminating room fails with 403: Forbidden","Given: a manager with a room; When: manager terminates the room with a problem: non-existent manager; Then: terminating room fails with 403: Forbidden",""
"passed","Thu Oct 12 13:06:36 EEST 2023","Thu Oct 12 13:06:37 EEST 2023","1112","GenericSpecification","ListSubscriptionsTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.ListSubscriptionsTests","Given: a member with subscriptions in different statuses in a room; When: member lists their status=PENDING subscriptions; Then: listing of subscription succeeds and PENDING subscriptions are returned","Given: a member with subscriptions in different statuses in a room; When: member lists their status=PENDING subscriptions; Then: listing of subscription succeeds and PENDING subscriptions are returned",""
"passed","Thu Oct 12 13:06:42 EEST 2023","Thu Oct 12 13:06:43 EEST 2023","337","GenericSpecification","ListSubscriptionsTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.ListSubscriptionsTests","Given: a member with no subscriptions in a room; When: member lists their ACTIVE subscriptions; Then: listing of subscription succeeds and empty list is returned","Given: a member with no subscriptions in a room; When: member lists their ACTIVE subscriptions; Then: listing of subscription succeeds and empty list is returned",""
"passed","Thu Oct 12 13:07:06 EEST 2023","Thu Oct 12 13:07:06 EEST 2023","1","GenericSpecification","EventTypeTests","","com.govstack.information_mediator.pubsub.ui.EventTypeTests","Given: a room with event type that has multiple versions; When: user terminates an event type version; Then: event type version is terminated","Given: a room with event type that has multiple versions; When: user terminates an event type version; Then: event type version is terminated",""
"passed","Thu Oct 12 13:06:34 EEST 2023","Thu Oct 12 13:06:34 EEST 2023","293","GenericSpecification","GetRoomsTests","","com.govstack.information_mediator.pubsub.api.management.rooms.GetRoomsTests","Given: a manager with multiple rooms; When: member gets their rooms with pageSortingParameters [desc:true]; Then: getting rooms succeeds and correct rooms are returned","Given: a manager with multiple rooms; When: member gets their rooms with pageSortingParameters [desc:true]; Then: getting rooms succeeds and correct rooms are returned",""
"passed","Thu Oct 12 13:08:16 EEST 2023","Thu Oct 12 13:08:16 EEST 2023","0","GenericSpecification","SubscriptionTests","","com.govstack.information_mediator.pubsub.ui.SubscriptionTests","Given: a room with subscriptions in all statuses (PENDING, ACTIVE, REJECTED, TERMINATED) exists; When: user filters rooms' subscriptions by status ACTIVE; Then: rooms' subscriptions with status ACTIVE are listed","Given: a room with subscriptions in all statuses (PENDING, ACTIVE, REJECTED, TERMINATED) exists; When: user filters rooms' subscriptions by status ACTIVE; Then: rooms' subscriptions with status ACTIVE are listed",""
"passed","Thu Oct 12 13:07:06 EEST 2023","Thu Oct 12 13:07:06 EEST 2023","273","GenericSpecification","PullTests","","com.govstack.information_mediator.pubsub.api.messaging.PullTests","Given: event type with 1 active PULL subscription; When: message is pulled with problem ''X-Road-Client' header missing'; Then: pull fails with 500","Given: event type with 1 active PULL subscription; When: message is pulled with problem ''X-Road-Client' header missing'; Then: pull fails with 500",""
"passed","Thu Oct 12 13:07:01 EEST 2023","Thu Oct 12 13:07:01 EEST 2023","185","GenericSpecification","PublishTests","","com.govstack.information_mediator.pubsub.api.messaging.PublishTests","Given: an event type; When: a message with problem 'terminated event type' is published; Then: publish fails with 404: 'Event Type was not found' ","Given: an event type; When: a message with problem 'terminated event type' is published; Then: publish fails with 404: 'Event Type was not found' ",""
"passed","Thu Oct 12 13:06:36 EEST 2023","Thu Oct 12 13:06:36 EEST 2023","0","GenericSpecification","ListSubscriptionEventsDeliveryInfoTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.ListSubscriptionEventsDeliveryInfoTests","Given: a room with subscription method PUSH exists and event published to room, but not delivered and delivery attempts remaining; When: manager lists subscription events with status filter='PENDING'; Then: only subscriber events with status 'PENDING' returned","Given: a room with subscription method PUSH exists and event published to room, but not delivered and delivery attempts remaining; When: manager lists subscription events with status filter='PENDING'; Then: only subscriber events with status 'PENDING' returned",""
"passed","Thu Oct 12 13:06:16 EEST 2023","Thu Oct 12 13:06:16 EEST 2023","40","GenericSpecification","CreateEventTypeVersionsTests","","com.govstack.information_mediator.pubsub.api.management.event_type_versions.CreateEventTypeVersionsTests","Given: a room with event type with version 1; When: manager adds new version with valid JSON schema to event type; Then: event type version 2 saved","Given: a room with event type with version 1; When: manager adds new version with valid JSON schema to event type; Then: event type version 2 saved",""
"passed","Thu Oct 12 13:08:16 EEST 2023","Thu Oct 12 13:08:16 EEST 2023","0","GenericSpecification","SubscriptionTests","","com.govstack.information_mediator.pubsub.ui.SubscriptionTests","Given: a room with subscription method PULL exists and event published to room and it has expired before it was pulled; When: user opens subscription details; Then: event shown as UNCONSUMED under 'Published events'","Given: a room with subscription method PULL exists and event published to room and it has expired before it was pulled; When: user opens subscription details; Then: event shown as UNCONSUMED under 'Published events'",""
"passed","Thu Oct 12 13:06:35 EEST 2023","Thu Oct 12 13:06:35 EEST 2023","120","GenericSpecification","GetRoomsTests","","com.govstack.information_mediator.pubsub.api.management.rooms.GetRoomsTests","Given: a manager with a terminated room; When: member gets their rooms; Then: getting rooms succeeds and an empty list is returned","Given: a manager with a terminated room; When: member gets their rooms; Then: getting rooms succeeds and an empty list is returned",""
"passed","Thu Oct 12 13:07:06 EEST 2023","Thu Oct 12 13:07:06 EEST 2023","233","GenericSpecification","PullTests","","com.govstack.information_mediator.pubsub.api.messaging.PullTests","Given: event type with 1 active PULL subscription; When: message is pulled with problem ''X-Road-Client' header not matching 'memberId''; Then: pull fails with 500","Given: event type with 1 active PULL subscription; When: message is pulled with problem ''X-Road-Client' header not matching 'memberId''; Then: pull fails with 500",""
"passed","Thu Oct 12 13:08:16 EEST 2023","Thu Oct 12 13:08:16 EEST 2023","1","GenericSpecification","SubscriptionTests","","com.govstack.information_mediator.pubsub.ui.SubscriptionTests","Given: admin is logged in and room with subscriptions in all statuses (PENDING, ACTIVE, REJECTED, TERMINATED) exists; When: admin opens subscriptions tab in room details; Then: all rooms' subscriptions are listed","Given: admin is logged in and room with subscriptions in all statuses (PENDING, ACTIVE, REJECTED, TERMINATED) exists; When: admin opens subscriptions tab in room details; Then: all rooms' subscriptions are listed",""
"passed","Thu Oct 12 13:06:17 EEST 2023","Thu Oct 12 13:06:17 EEST 2023","31","GenericSpecification","AddPublisherTests","","com.govstack.information_mediator.pubsub.api.management.publishers.AddPublisherTests","Given: room with multiple event types; When: manager adds publisher for one event type(s); Then: publisher added for one event type(s)","Given: room with multiple event types; When: manager adds publisher for one event type(s); Then: publisher added for one event type(s)",""
"passed","Thu Oct 12 13:07:01 EEST 2023","Thu Oct 12 13:07:02 EEST 2023","224","GenericSpecification","PublishTests","","com.govstack.information_mediator.pubsub.api.messaging.PublishTests","Given: an event type; When: a message missing 'eventType'; Then: publish fails with 'Invalid data for publishing event'","Given: an event type; When: a message missing 'eventType'; Then: publish fails with 'Invalid data for publishing event'",""
"passed","Thu Oct 12 13:06:45 EEST 2023","Thu Oct 12 13:06:45 EEST 2023","153","GenericSpecification","SubscribeTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.SubscribeTests","Given: an active room with event type; When: member subscribes with data: [method:PUSH, pushUrl:https://host/url, deliveryDelay:100, deliveryDelayMultiplier:10.0, deliveryAttempts:100]; Then: subscribe succeeds and correct data is saved","Given: an active room with event type; When: member subscribes with data: [method:PUSH, pushUrl:https://host/url, deliveryDelay:100, deliveryDelayMultiplier:10.0, deliveryAttempts:100]; Then: subscribe succeeds and correct data is saved",""
"passed","Thu Oct 12 13:08:16 EEST 2023","Thu Oct 12 13:08:16 EEST 2023","0","GenericSpecification","SubscriptionTests","","com.govstack.information_mediator.pubsub.ui.SubscriptionTests","Given: a room with subscription method PULL exists and event published to room and pulled by subscriber; When: user opens subscription details; Then: event shown as DELIVERED under 'Published events'","Given: a room with subscription method PULL exists and event published to room and pulled by subscriber; When: user opens subscription details; Then: event shown as DELIVERED under 'Published events'",""
"passed","Thu Oct 12 13:06:48 EEST 2023","Thu Oct 12 13:06:49 EEST 2023","179","GenericSpecification","UnsubscribeTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.UnsubscribeTests","Given: member's subscription; When: member unsubscribes with problem 'non-existent subscriptionId'; Then: unsubscribe fails with 500","Given: member's subscription; When: member unsubscribes with problem 'non-existent subscriptionId'; Then: unsubscribe fails with 500",""
"passed","Thu Oct 12 13:06:36 EEST 2023","Thu Oct 12 13:06:36 EEST 2023","3","GenericSpecification","ListSubscriptionEventsDeliveryInfoTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.ListSubscriptionEventsDeliveryInfoTests","Given: a room with subscription method PULL exists and event published to room, but not pulled or expired; When: manager lists subscription events with status filter='PUBLISHED'; Then: only subscriber events with status 'PUBLISHED' returned","Given: a room with subscription method PULL exists and event published to room, but not pulled or expired; When: manager lists subscription events with status filter='PUBLISHED'; Then: only subscriber events with status 'PUBLISHED' returned",""
"passed","Thu Oct 12 13:08:16 EEST 2023","Thu Oct 12 13:08:16 EEST 2023","0","GenericSpecification","SubscriptionTests","","com.govstack.information_mediator.pubsub.ui.SubscriptionTests","Given: a room with subscriptions in all statuses (PENDING, ACTIVE, REJECTED, TERMINATED) exists; When: user filters rooms' subscriptions by status TERMINATED; Then: rooms' subscriptions with status TERMINATED are listed","Given: a room with subscriptions in all statuses (PENDING, ACTIVE, REJECTED, TERMINATED) exists; When: user filters rooms' subscriptions by status TERMINATED; Then: rooms' subscriptions with status TERMINATED are listed",""
"passed","Thu Oct 12 13:06:36 EEST 2023","Thu Oct 12 13:06:36 EEST 2023","1","GenericSpecification","ListSubscriptionEventsDeliveryInfoTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.ListSubscriptionEventsDeliveryInfoTests","Given: a room with subscription method PUSH exists and event published to room and it has expired before it could be delivered; When: manager lists subscription events with status filter='UNCONSUMED'; Then: only subscriber events with status 'UNCONSUMED' returned","Given: a room with subscription method PUSH exists and event published to room and it has expired before it could be delivered; When: manager lists subscription events with status filter='UNCONSUMED'; Then: only subscriber events with status 'UNCONSUMED' returned",""
"passed","Thu Oct 12 13:08:01 EEST 2023","Thu Oct 12 13:08:10 EEST 2023","9402","GenericSpecification","ManagersTests","","com.govstack.information_mediator.pubsub.ui.ManagersTests","Given: admin is logged in; When: admin creates XROAD manager; Then: manager added","Given: admin is logged in; When: admin creates XROAD manager; Then: manager added",""
"passed","Thu Oct 12 13:07:26 EEST 2023","Thu Oct 12 13:07:32 EEST 2023","5509","GenericSpecification","LoginTests","","com.govstack.information_mediator.pubsub.ui.LoginTests","Given: management-ui is opened; When: management user that exists in PubSub: internal-manager logs in; Then: Rooms List page is shown","Given: management-ui is opened; When: management user that exists in PubSub: internal-manager logs in; Then: Rooms List page is shown",""
"passed","Thu Oct 12 13:06:47 EEST 2023","Thu Oct 12 13:06:48 EEST 2023","364","GenericSpecification","SubscribeTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.SubscribeTests","Given: an active room with event type; When: member subscribes with problem: member already has 1 active PULL subscription for this event type; Then: subscribe fails with 500","Given: an active room with event type; When: member subscribes with problem: member already has 1 active PULL subscription for this event type; Then: subscribe fails with 500",""
"passed","Thu Oct 12 13:08:15 EEST 2023","Thu Oct 12 13:08:15 EEST 2023","0","GenericSpecification","RoomListTests","","com.govstack.information_mediator.pubsub.ui.RoomListTests","Given: rooms exist and manager is logged in; When: manager views room details; Then: room details are displayed","Given: rooms exist and manager is logged in; When: manager views room details; Then: room details are displayed",""
"passed","Thu Oct 12 13:07:01 EEST 2023","Thu Oct 12 13:07:01 EEST 2023","167","GenericSpecification","PublishTests","","com.govstack.information_mediator.pubsub.api.messaging.PublishTests","Given: an event type; When: a message with problem 'invalid request data' is published; Then: publish fails with 400: 'The event payload is not compatible with the event type' ","Given: an event type; When: a message with problem 'invalid request data' is published; Then: publish fails with 400: 'The event payload is not compatible with the event type' ",""
"passed","Thu Oct 12 13:07:00 EEST 2023","Thu Oct 12 13:07:00 EEST 2023","151","GenericSpecification","PublishTests","","com.govstack.information_mediator.pubsub.api.messaging.PublishTests","Given: an event type; When: a message with problem 'terminated room' is published; Then: publish fails with 404: 'Room was not found' ","Given: an event type; When: a message with problem 'terminated room' is published; Then: publish fails with 404: 'Room was not found' ",""
"passed","Thu Oct 12 13:08:15 EEST 2023","Thu Oct 12 13:08:15 EEST 2023","1","GenericSpecification","RoomListTests","","com.govstack.information_mediator.pubsub.ui.RoomListTests","Given: manager is logged in and room exists; When: manager edits rooms (message expiration, delivery delay, delivery delay multiplier, delivery attempts); Then: room saved with the changed configuration","Given: manager is logged in and room exists; When: manager edits rooms (message expiration, delivery delay, delivery delay multiplier, delivery attempts); Then: room saved with the changed configuration",""
"passed","Thu Oct 12 13:07:00 EEST 2023","Thu Oct 12 13:07:00 EEST 2023","158","GenericSpecification","PublishTests","","com.govstack.information_mediator.pubsub.api.messaging.PublishTests","Given: an event type; When: a message with problem 'non-existent room' is published; Then: publish fails with 404: 'Room was not found' ","Given: an event type; When: a message with problem 'non-existent room' is published; Then: publish fails with 404: 'Room was not found' ",""
"passed","Thu Oct 12 13:07:02 EEST 2023","Thu Oct 12 13:07:02 EEST 2023","201","GenericSpecification","PublishTests","","com.govstack.information_mediator.pubsub.api.messaging.PublishTests","Given: an event type; When: a message missing 'both'; Then: publish fails with 'Invalid data for publishing event'","Given: an event type; When: a message missing 'both'; Then: publish fails with 'Invalid data for publishing event'",""
"passed","Thu Oct 12 13:06:36 EEST 2023","Thu Oct 12 13:06:36 EEST 2023","213","GenericSpecification","GetRoomsTests","","com.govstack.information_mediator.pubsub.api.management.rooms.GetRoomsTests","Given: a manager; When: member gets their rooms with a problem: 'X-Road-Client' header missing; Then: getting rooms fails","Given: a manager; When: member gets their rooms with a problem: 'X-Road-Client' header missing; Then: getting rooms fails",""
"passed","Thu Oct 12 13:07:07 EEST 2023","Thu Oct 12 13:07:07 EEST 2023","1","GenericSpecification","EventsTests","","com.govstack.information_mediator.pubsub.ui.EventsTests","Given: a room with events (where deleted event type and publisher); When: user opens event details; Then: Event (identifier, correlation id, created at), Event Type (identifier, deleted at, version number, version JSON schema, version deleted at), Publisher (identifier, identifier type, deleted at) are displayed","Given: a room with events (where deleted event type and publisher); When: user opens event details; Then: Event (identifier, correlation id, created at), Event Type (identifier, deleted at, version number, version JSON schema, version deleted at), Publisher (identifier, identifier type, deleted at) are displayed",""
"passed","Thu Oct 12 13:06:38 EEST 2023","Thu Oct 12 13:06:39 EEST 2023","905","GenericSpecification","ListSubscriptionsTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.ListSubscriptionsTests","Given: a member with subscriptions in different statuses in a room; When: member lists their status=TERMINATED subscriptions; Then: listing of subscription succeeds and TERMINATED subscriptions are returned","Given: a member with subscriptions in different statuses in a room; When: member lists their status=TERMINATED subscriptions; Then: listing of subscription succeeds and TERMINATED subscriptions are returned",""
"passed","Thu Oct 12 13:07:04 EEST 2023","Thu Oct 12 13:07:05 EEST 2023","285","GenericSpecification","PullTests","","com.govstack.information_mediator.pubsub.api.messaging.PullTests","Given: event type with 1 active PULL subscription; When: message is pulled with problem 'terminated subscription'; Then: pull fails with 404","Given: event type with 1 active PULL subscription; When: message is pulled with problem 'terminated subscription'; Then: pull fails with 404",""
"passed","Thu Oct 12 13:07:06 EEST 2023","Thu Oct 12 13:07:06 EEST 2023","1","GenericSpecification","EventTypeTests","","com.govstack.information_mediator.pubsub.ui.EventTypeTests","Given: a room with event type; When: user terminates event type; Then: event type is terminated and related entities (event type versions, publishers, subscriptions) terminated","Given: a room with event type; When: user terminates event type; Then: event type is terminated and related entities (event type versions, publishers, subscriptions) terminated",""
"passed","Thu Oct 12 13:07:04 EEST 2023","Thu Oct 12 13:07:04 EEST 2023","247","GenericSpecification","PullTests","","com.govstack.information_mediator.pubsub.api.messaging.PullTests","Given: event type with 1 active PULL subscription; When: message is pulled with problem 'non-existent subscription'; Then: pull fails with 404","Given: event type with 1 active PULL subscription; When: message is pulled with problem 'non-existent subscription'; Then: pull fails with 404",""
"passed","Thu Oct 12 13:06:48 EEST 2023","Thu Oct 12 13:06:48 EEST 2023","188","GenericSpecification","UnsubscribeTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.UnsubscribeTests","Given: member's ACTIVE subscription; When: member unsubscribes; Then: unsubscribe succeeds and correct data is saved in DB","Given: member's ACTIVE subscription; When: member unsubscribes; Then: unsubscribe succeeds and correct data is saved in DB",""
"passed","Thu Oct 12 13:07:01 EEST 2023","Thu Oct 12 13:07:01 EEST 2023","178","GenericSpecification","PublishTests","","com.govstack.information_mediator.pubsub.api.messaging.PublishTests","Given: an event type; When: a message with problem 'event type publish not allowed for publisher' is published; Then: publish fails with 404: 'Event Type was not found' ","Given: an event type; When: a message with problem 'event type publish not allowed for publisher' is published; Then: publish fails with 404: 'Event Type was not found' ",""
"passed","Thu Oct 12 13:08:15 EEST 2023","Thu Oct 12 13:08:15 EEST 2023","2","GenericSpecification","RoomListTests","","com.govstack.information_mediator.pubsub.ui.RoomListTests","Given: admin is logged in and managers exist; When: admin creates room; Then: room created with the entered configuration","Given: admin is logged in and managers exist; When: admin creates room; Then: room created with the entered configuration",""
"passed","Thu Oct 12 13:06:17 EEST 2023","Thu Oct 12 13:06:17 EEST 2023","4","GenericSpecification","GetPublishersTests","","com.govstack.information_mediator.pubsub.api.management.publishers.GetPublishersTests","Given: room with publishers; When: user lists publishers in a room; Then: rooms' all active publishers are returned","Given: room with publishers; When: user lists publishers in a room; Then: rooms' all active publishers are returned",""
"passed","Thu Oct 12 13:07:03 EEST 2023","Thu Oct 12 13:07:04 EEST 2023","932","GenericSpecification","PullTests","","com.govstack.information_mediator.pubsub.api.messaging.PullTests","Given: 2 event types with 1 active PULL subscription and 3 published message across event types; When: messages are pulled successfully in a loop; Then: no more events in queue and messages marked as delivered","Given: 2 event types with 1 active PULL subscription and 3 published message across event types; When: messages are pulled successfully in a loop; Then: no more events in queue and messages marked as delivered",""
"passed","Thu Oct 12 13:06:47 EEST 2023","Thu Oct 12 13:06:47 EEST 2023","151","GenericSpecification","SubscribeTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.SubscribeTests","Given: an active room with event type; When: member subscribes with problem: terminated event type; Then: subscribe fails with 404","Given: an active room with event type; When: member subscribes with problem: terminated event type; Then: subscribe fails with 404",""
"passed","Thu Oct 12 13:07:07 EEST 2023","Thu Oct 12 13:07:07 EEST 2023","2","GenericSpecification","EventsTests","","com.govstack.information_mediator.pubsub.ui.EventsTests","Given: a room with events (different: event types, event type versions, publishers); When: user filters events list by 'Time range'; Then: only events matching 'Time range' values are listed","Given: a room with events (different: event types, event type versions, publishers); When: user filters events list by 'Time range'; Then: only events matching 'Time range' values are listed",""
"passed","Thu Oct 12 13:06:49 EEST 2023","Thu Oct 12 13:06:49 EEST 2023","250","GenericSpecification","UnsubscribeTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.UnsubscribeTests","Given: member's subscription; When: member unsubscribes with problem ''X-Road-Client' header missing'; Then: unsubscribe fails with 403","Given: member's subscription; When: member unsubscribes with problem ''X-Road-Client' header missing'; Then: unsubscribe fails with 403",""
"passed","Thu Oct 12 13:08:16 EEST 2023","Thu Oct 12 13:08:16 EEST 2023","1","GenericSpecification","SubscriptionTests","","com.govstack.information_mediator.pubsub.ui.SubscriptionTests","Given: manager is logged in and room with ACTIVE subscription exists; When: manager terminates subscription; Then: subscription is terminated","Given: manager is logged in and room with ACTIVE subscription exists; When: manager terminates subscription; Then: subscription is terminated",""
"passed","Thu Oct 12 13:06:52 EEST 2023","Thu Oct 12 13:06:53 EEST 2023","236","GenericSpecification","PublishTests","","com.govstack.information_mediator.pubsub.api.messaging.PublishTests","Given: an event type with a PENDING subscription; When: message is published; Then: publish succeeds and event is created and no message is published","Given: an event type with a PENDING subscription; When: message is published; Then: publish succeeds and event is created and no message is published",""
"passed","Thu Oct 12 13:07:05 EEST 2023","Thu Oct 12 13:07:05 EEST 2023","263","GenericSpecification","PullTests","","com.govstack.information_mediator.pubsub.api.messaging.PullTests","Given: event type with 1 active PULL subscription; When: message is pulled with problem 'terminated room'; Then: pull fails with 404","Given: event type with 1 active PULL subscription; When: message is pulled with problem 'terminated room'; Then: pull fails with 404",""
"passed","Thu Oct 12 13:08:16 EEST 2023","Thu Oct 12 13:08:16 EEST 2023","0","GenericSpecification","SubscriptionTests","","com.govstack.information_mediator.pubsub.ui.SubscriptionTests","Given: manager is logged in and room with subscriptions in all statuses (PENDING, ACTIVE, REJECTED, TERMINATED) exists; When: manager opens subscriptions tab in room details; Then: all rooms' subscriptions are listed","Given: manager is logged in and room with subscriptions in all statuses (PENDING, ACTIVE, REJECTED, TERMINATED) exists; When: manager opens subscriptions tab in room details; Then: all rooms' subscriptions are listed",""
"passed","Thu Oct 12 13:06:36 EEST 2023","Thu Oct 12 13:06:36 EEST 2023","0","GenericSpecification","ListSubscriptionEventsDeliveryInfoTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.ListSubscriptionEventsDeliveryInfoTests","Given: a room with subscription method PUSH exists and event published to room, but not delivered and no more delivery attempts remaining; When: manager lists subscription events with status filter='UNCONSUMED'; Then: only subscriber events with status 'UNCONSUMED' returned","Given: a room with subscription method PUSH exists and event published to room, but not delivered and no more delivery attempts remaining; When: manager lists subscription events with status filter='UNCONSUMED'; Then: only subscriber events with status 'UNCONSUMED' returned",""
"passed","Thu Oct 12 13:06:18 EEST 2023","Thu Oct 12 13:06:25 EEST 2023","7085","GenericSpecification","DeleteRoomTests","","com.govstack.information_mediator.pubsub.api.management.rooms.DeleteRoomTests","Given: a room with a event type, publisher and subscriber; When: manager terminates the room; Then: room termination succeeds and connected data is terminated","Given: a room with a event type, publisher and subscriber; When: manager terminates the room; Then: room termination succeeds and connected data is terminated",""
"passed","Thu Oct 12 13:08:16 EEST 2023","Thu Oct 12 13:08:16 EEST 2023","1","GenericSpecification","SubscriptionTests","","com.govstack.information_mediator.pubsub.ui.SubscriptionTests","Given: a room with subscription method PUSH exist; When: user opens subscription details; Then: subscription details displayed (ID, Identifier, Status, Method, Push URL, Created At)","Given: a room with subscription method PUSH exist; When: user opens subscription details; Then: subscription details displayed (ID, Identifier, Status, Method, Push URL, Created At)",""
"passed","Thu Oct 12 13:06:46 EEST 2023","Thu Oct 12 13:06:46 EEST 2023","187","GenericSpecification","SubscribeTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.SubscribeTests","Given: an active room with event type; When: member subscribes with problem: missing eventType in body; Then: subscribe fails with 500","Given: an active room with event type; When: member subscribes with problem: missing eventType in body; Then: subscribe fails with 500",""
"passed","Thu Oct 12 13:06:36 EEST 2023","Thu Oct 12 13:06:36 EEST 2023","2","GenericSpecification","HandleSubscriptionTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.HandleSubscriptionTests","Given: a room with subscription in status PENDING; When: manager rejects subscription; Then: rejecting succeeds and subscription status set to REJECTED","Given: a room with subscription in status PENDING; When: manager rejects subscription; Then: rejecting succeeds and subscription status set to REJECTED",""
"passed","Thu Oct 12 13:06:28 EEST 2023","Thu Oct 12 13:06:29 EEST 2023","474","GenericSpecification","DeleteRoomTests","","com.govstack.information_mediator.pubsub.api.management.rooms.DeleteRoomTests","Given: a manager with a room; When: manager terminates the room with a problem: other member's room; Then: terminating room fails with 403: Forbidden","Given: a manager with a room; When: manager terminates the room with a problem: other member's room; Then: terminating room fails with 403: Forbidden",""
"passed","Thu Oct 12 13:08:15 EEST 2023","Thu Oct 12 13:08:15 EEST 2023","0","GenericSpecification","RoomListTests","","com.govstack.information_mediator.pubsub.ui.RoomListTests","Given: rooms exist and admin is logged in; When: admin selects a manager name to be filtered by; Then: selected managers' active rooms are listed","Given: rooms exist and admin is logged in; When: admin selects a manager name to be filtered by; Then: selected managers' active rooms are listed",""
"passed","Thu Oct 12 13:07:07 EEST 2023","Thu Oct 12 13:07:21 EEST 2023","14146","GenericSpecification","LoginTests","","com.govstack.information_mediator.pubsub.ui.LoginTests","Given: management-ui is opened; When: admin user: system-administrator logs in; Then: Rooms List page is shown","Given: management-ui is opened; When: admin user: system-administrator logs in; Then: Rooms List page is shown",""
"passed","Thu Oct 12 13:07:06 EEST 2023","Thu Oct 12 13:07:06 EEST 2023","2","GenericSpecification","EventTypeTests","","com.govstack.information_mediator.pubsub.ui.EventTypeTests","Given: a room with event type with version 1; When: user adds new version with valid JSON schema to event type; Then: event type version 2 saved","Given: a room with event type with version 1; When: user adds new version with valid JSON schema to event type; Then: event type version 2 saved",""
"passed","Thu Oct 12 13:06:17 EEST 2023","Thu Oct 12 13:06:17 EEST 2023","3","GenericSpecification","DeletePublisherTests","","com.govstack.information_mediator.pubsub.api.management.publishers.DeletePublisherTests","Given: room with publishers; When: manager terminates publisher; Then: publisher is terminated","Given: room with publishers; When: manager terminates publisher; Then: publisher is terminated",""
"passed","Thu Oct 12 13:06:34 EEST 2023","Thu Oct 12 13:06:34 EEST 2023","205","GenericSpecification","GetRoomDetailsTests","","com.govstack.information_mediator.pubsub.api.management.rooms.GetRoomDetailsTests","Given: a manager with a room; When: manager gets their room details with a problem ''X-Road-Client' header not matching 'memberId''; Then: getting room details fails with 403: 'Forbidden'","Given: a manager with a room; When: manager gets their room details with a problem ''X-Road-Client' header not matching 'memberId''; Then: getting room details fails with 403: 'Forbidden'",""
"passed","Thu Oct 12 13:06:54 EEST 2023","Thu Oct 12 13:06:56 EEST 2023","1634","GenericSpecification","PublishTests","","com.govstack.information_mediator.pubsub.api.messaging.PublishTests","Given: an event type with 1 active PUSH subscription with pushUrl response: 200; When: message is published; Then: publish succeeds and 1 event is created, published and delivered with correct data","Given: an event type with 1 active PUSH subscription with pushUrl response: 200; When: message is published; Then: publish succeeds and 1 event is created, published and delivered with correct data",""
"passed","Thu Oct 12 13:07:02 EEST 2023","Thu Oct 12 13:07:02 EEST 2023","210","GenericSpecification","PublishTests","","com.govstack.information_mediator.pubsub.api.messaging.PublishTests","Given: an event type; When: a message has a problem with 'X-Road-Client' header missing; Then: publish fails with 'Technical error'","Given: an event type; When: a message has a problem with 'X-Road-Client' header missing; Then: publish fails with 'Technical error'",""
"passed","Thu Oct 12 13:08:16 EEST 2023","Thu Oct 12 13:08:16 EEST 2023","1","GenericSpecification","SubscriptionTests","","com.govstack.information_mediator.pubsub.ui.SubscriptionTests","Given: a room with subscription method PUSH exists and event published to room, but not delivered and delivery attempts remaining; When: user opens subscription details; Then: event shown as PENDING under 'Published events'","Given: a room with subscription method PUSH exists and event published to room, but not delivered and delivery attempts remaining; When: user opens subscription details; Then: event shown as PENDING under 'Published events'",""
"passed","Thu Oct 12 13:08:16 EEST 2023","Thu Oct 12 13:08:16 EEST 2023","0","GenericSpecification","SubscriptionTests","","com.govstack.information_mediator.pubsub.ui.SubscriptionTests","Given: a room with subscription method PUSH exists and event published to room and delivered to subscriber; When: user opens subscription details; Then: event shown as DELIVERED under 'Published events'","Given: a room with subscription method PUSH exists and event published to room and delivered to subscriber; When: user opens subscription details; Then: event shown as DELIVERED under 'Published events'",""
"passed","Thu Oct 12 13:08:33 EEST 2023","Thu Oct 12 13:08:39 EEST 2023","5932","GenericSpecification","LoginTests","","com.govstack.information_mediator.xroad.ui.LoginTests","Given: security server is opened; When: user securityserver-observer tries to log in; Then: user is logged in","Given: security server is opened; When: user securityserver-observer tries to log in; Then: user is logged in",""
"passed","Thu Oct 12 13:07:37 EEST 2023","Thu Oct 12 13:07:52 EEST 2023","14756","GenericSpecification","ManagersTests","","com.govstack.information_mediator.pubsub.ui.ManagersTests","Given: managers exist and admin is logged in; When: admins open managers page; Then: manager added and all active managers are listed","Given: managers exist and admin is logged in; When: admins open managers page; Then: manager added and all active managers are listed",""
"passed","Thu Oct 12 13:06:35 EEST 2023","Thu Oct 12 13:06:35 EEST 2023","175","GenericSpecification","GetRoomsTests","","com.govstack.information_mediator.pubsub.api.management.rooms.GetRoomsTests","Given: a manager with multiple rooms; When: member gets their rooms with pageSortingParameters [limit:1, offset:1]; Then: getting rooms succeeds and correct rooms are returned","Given: a manager with multiple rooms; When: member gets their rooms with pageSortingParameters [limit:1, offset:1]; Then: getting rooms succeeds and correct rooms are returned",""
"passed","Thu Oct 12 13:06:49 EEST 2023","Thu Oct 12 13:06:50 EEST 2023","280","GenericSpecification","UnsubscribeTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.UnsubscribeTests","Given: member's subscription; When: member unsubscribes with problem ''X-Road-Client' header not matching 'memberId''; Then: unsubscribe fails with 403","Given: member's subscription; When: member unsubscribes with problem ''X-Road-Client' header not matching 'memberId''; Then: unsubscribe fails with 403",""
"passed","Thu Oct 12 13:07:05 EEST 2023","Thu Oct 12 13:07:05 EEST 2023","233","GenericSpecification","PullTests","","com.govstack.information_mediator.pubsub.api.messaging.PullTests","Given: event type with 1 active PULL subscription; When: message is pulled with problem 'non-existent room'; Then: pull fails with 404","Given: event type with 1 active PULL subscription; When: message is pulled with problem 'non-existent room'; Then: pull fails with 404",""
"passed","Thu Oct 12 13:06:17 EEST 2023","Thu Oct 12 13:06:17 EEST 2023","1","GenericSpecification","AddPublisherTests","","com.govstack.information_mediator.pubsub.api.management.publishers.AddPublisherTests","Given: room with multiple event types; When: manager adds publisher for all event type(s); Then: publisher added for all event type(s)","Given: room with multiple event types; When: manager adds publisher for all event type(s); Then: publisher added for all event type(s)",""
"passed","Thu Oct 12 13:07:07 EEST 2023","Thu Oct 12 13:07:07 EEST 2023","1","GenericSpecification","EventsTests","","com.govstack.information_mediator.pubsub.ui.EventsTests","Given: a room with events (different: event types, event type versions, publishers); When: user filters events list by 'Event publisher'; Then: only events matching 'Event publisher' values are listed","Given: a room with events (different: event types, event type versions, publishers); When: user filters events list by 'Event publisher'; Then: only events matching 'Event publisher' values are listed",""
"passed","Thu Oct 12 13:07:02 EEST 2023","Thu Oct 12 13:07:02 EEST 2023","169","GenericSpecification","PublishTests","","com.govstack.information_mediator.pubsub.api.messaging.PublishTests","Given: an event type; When: a message has a problem with 'X-Road-Client' header not matching memberId; Then: publish fails with 'Technical error'","Given: an event type; When: a message has a problem with 'X-Road-Client' header not matching memberId; Then: publish fails with 'Technical error'",""
"passed","Thu Oct 12 13:07:21 EEST 2023","Thu Oct 12 13:07:26 EEST 2023","5627","GenericSpecification","LoginTests","","com.govstack.information_mediator.pubsub.ui.LoginTests","Given: management-ui is opened; When: admin user: service-administrator logs in; Then: Rooms List page is shown","Given: management-ui is opened; When: admin user: service-administrator logs in; Then: Rooms List page is shown",""
"passed","Thu Oct 12 13:08:10 EEST 2023","Thu Oct 12 13:08:15 EEST 2023","5387","GenericSpecification","ManagersTests","","com.govstack.information_mediator.pubsub.ui.ManagersTests","Given: a manager exists and admin logs in; When: admin terminates manager; Then: manager terminated","Given: a manager exists and admin logs in; When: admin terminates manager; Then: manager terminated",""
"passed","Thu Oct 12 13:07:06 EEST 2023","Thu Oct 12 13:07:06 EEST 2023","1","GenericSpecification","EventTypeTests","","com.govstack.information_mediator.pubsub.ui.EventTypeTests","Given: a room with event type; When: user edits event type version; Then: event type version successfully updated","Given: a room with event type; When: user edits event type version; Then: event type version successfully updated",""
"passed","Thu Oct 12 13:06:17 EEST 2023","Thu Oct 12 13:06:17 EEST 2023","4","GenericSpecification","AddEventTypeTests","","com.govstack.information_mediator.pubsub.api.management.event_types.AddEventTypeTests","Given: a room; When: manager adds event type with valid JSON schema to room; Then: event type with version 1 saved in room","Given: a room; When: manager adds event type with valid JSON schema to room; Then: event type with version 1 saved in room",""
"passed","Thu Oct 12 13:06:33 EEST 2023","Thu Oct 12 13:06:34 EEST 2023","252","GenericSpecification","GetRoomDetailsTests","","com.govstack.information_mediator.pubsub.api.management.rooms.GetRoomDetailsTests","Given: a manager with a room; When: manager gets their room details with a problem ''X-Road-Client' header missing'; Then: getting room details fails with 403: 'Forbidden'","Given: a manager with a room; When: manager gets their room details with a problem ''X-Road-Client' header missing'; Then: getting room details fails with 403: 'Forbidden'",""
"passed","Thu Oct 12 13:06:46 EEST 2023","Thu Oct 12 13:06:46 EEST 2023","151","GenericSpecification","SubscribeTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.SubscribeTests","Given: an active room with event type; When: member subscribes with problem: PUSH subscription missing pushUrl; Then: subscribe fails with 500","Given: an active room with event type; When: member subscribes with problem: PUSH subscription missing pushUrl; Then: subscribe fails with 500",""
"passed","Thu Oct 12 13:06:37 EEST 2023","Thu Oct 12 13:06:38 EEST 2023","779","GenericSpecification","ListSubscriptionsTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.ListSubscriptionsTests","Given: a member with subscriptions in different statuses in a room; When: member lists their status=ACTIVE subscriptions; Then: listing of subscription succeeds and ACTIVE subscriptions are returned","Given: a member with subscriptions in different statuses in a room; When: member lists their status=ACTIVE subscriptions; Then: listing of subscription succeeds and ACTIVE subscriptions are returned",""
"passed","Thu Oct 12 13:06:44 EEST 2023","Thu Oct 12 13:06:44 EEST 2023","172","GenericSpecification","SubscribeTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.SubscribeTests","Given: an active room with event type; When: member subscribes with data: [method:PULL, deliveryAttempts:100]; Then: subscribe succeeds and correct data is saved","Given: an active room with event type; When: member subscribes with data: [method:PULL, deliveryAttempts:100]; Then: subscribe succeeds and correct data is saved",""
"passed","Thu Oct 12 13:06:43 EEST 2023","Thu Oct 12 13:06:43 EEST 2023","254","GenericSpecification","ListSubscriptionsTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.ListSubscriptionsTests","Given: a member with a subscription in a room; When: member lists their subscriptions with a problem ''X-Road-Client' header missing'; Then: listing of subscription fails with 403","Given: a member with a subscription in a room; When: member lists their subscriptions with a problem ''X-Road-Client' header missing'; Then: listing of subscription fails with 403",""
"passed","Thu Oct 12 13:08:16 EEST 2023","Thu Oct 12 13:08:16 EEST 2023","1","GenericSpecification","SubscriptionTests","","com.govstack.information_mediator.pubsub.ui.SubscriptionTests","Given: a room with subscription in status PENDING; When: user rejects subscription; Then: rejecting succeeds and subscription status set to REJECTED","Given: a room with subscription in status PENDING; When: user rejects subscription; Then: rejecting succeeds and subscription status set to REJECTED",""
"passed","Thu Oct 12 13:06:45 EEST 2023","Thu Oct 12 13:06:45 EEST 2023","176","GenericSpecification","SubscribeTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.SubscribeTests","Given: an active room with event type; When: member subscribes with data: [method:PUSH, pushUrl:https://host/url, deliveryDelayMultiplier:10.0]; Then: subscribe succeeds and correct data is saved","Given: an active room with event type; When: member subscribes with data: [method:PUSH, pushUrl:https://host/url, deliveryDelayMultiplier:10.0]; Then: subscribe succeeds and correct data is saved",""
"passed","Thu Oct 12 13:06:39 EEST 2023","Thu Oct 12 13:06:40 EEST 2023","665","GenericSpecification","ListSubscriptionsTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.ListSubscriptionsTests","Given: a member with subscriptions in different statuses in a room; When: member lists their status=REJECTED subscriptions; Then: listing of subscription succeeds and REJECTED subscriptions are returned","Given: a member with subscriptions in different statuses in a room; When: member lists their status=REJECTED subscriptions; Then: listing of subscription succeeds and REJECTED subscriptions are returned",""
"passed","Thu Oct 12 13:07:06 EEST 2023","Thu Oct 12 13:07:06 EEST 2023","1","GenericSpecification","EventTypeTests","","com.govstack.information_mediator.pubsub.ui.EventTypeTests","Given: a room with event type that has multiple event type versions; When: user views event type versions list; Then: event type non-terminated versions listed","Given: a room with event type that has multiple event type versions; When: user views event type versions list; Then: event type non-terminated versions listed",""
"passed","Thu Oct 12 13:06:47 EEST 2023","Thu Oct 12 13:06:47 EEST 2023","191","GenericSpecification","SubscribeTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.SubscribeTests","Given: an active room with event type; When: member subscribes with problem: 'X-Road-Client' header missing; Then: subscribe fails with 403","Given: an active room with event type; When: member subscribes with problem: 'X-Road-Client' header missing; Then: subscribe fails with 403",""
"passed","Thu Oct 12 13:06:29 EEST 2023","Thu Oct 12 13:06:29 EEST 2023","243","GenericSpecification","DeleteRoomTests","","com.govstack.information_mediator.pubsub.api.management.rooms.DeleteRoomTests","Given: a manager with a room; When: manager terminates the room with a problem: terminated room; Then: terminating room fails with 404: Room was not found","Given: a manager with a room; When: manager terminates the room with a problem: terminated room; Then: terminating room fails with 404: Room was not found",""
"passed","Thu Oct 12 13:07:01 EEST 2023","Thu Oct 12 13:07:01 EEST 2023","188","GenericSpecification","PublishTests","","com.govstack.information_mediator.pubsub.api.messaging.PublishTests","Given: an event type; When: a message with problem 'request data matching previous json schema version' is published; Then: publish fails with 400: 'The event payload is not compatible with the event type' ","Given: an event type; When: a message with problem 'request data matching previous json schema version' is published; Then: publish fails with 400: 'The event payload is not compatible with the event type' ",""
"passed","Thu Oct 12 13:06:53 EEST 2023","Thu Oct 12 13:06:53 EEST 2023","338","GenericSpecification","PublishTests","","com.govstack.information_mediator.pubsub.api.messaging.PublishTests","Given: an event type with a REJECTED subscription; When: message is published; Then: publish succeeds and event is created and no message is published","Given: an event type with a REJECTED subscription; When: message is published; Then: publish succeeds and event is created and no message is published",""
"passed","Thu Oct 12 13:07:07 EEST 2023","Thu Oct 12 13:07:07 EEST 2023","0","GenericSpecification","EventsTests","","com.govstack.information_mediator.pubsub.ui.EventsTests","Given: a room with events (different: event types, event type versions, publishers); When: user filters events list by 'Version'; Then: only events matching 'Version' values are listed","Given: a room with events (different: event types, event type versions, publishers); When: user filters events list by 'Version'; Then: only events matching 'Version' values are listed",""
"passed","Thu Oct 12 13:06:44 EEST 2023","Thu Oct 12 13:06:44 EEST 2023","174","GenericSpecification","SubscribeTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.SubscribeTests","Given: an active room with event type; When: member subscribes with data: [method:PULL, deliveryDelay:100]; Then: subscribe succeeds and correct data is saved","Given: an active room with event type; When: member subscribes with data: [method:PULL, deliveryDelay:100]; Then: subscribe succeeds and correct data is saved",""
"passed","Thu Oct 12 13:06:43 EEST 2023","Thu Oct 12 13:06:44 EEST 2023","327","GenericSpecification","SubscribeTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.SubscribeTests","Given: an active room with event type; When: member subscribes with data: [method:PULL]; Then: subscribe succeeds and correct data is saved","Given: an active room with event type; When: member subscribes with data: [method:PULL]; Then: subscribe succeeds and correct data is saved",""
"passed","Thu Oct 12 13:08:27 EEST 2023","Thu Oct 12 13:08:33 EEST 2023","5775","GenericSpecification","LoginTests","","com.govstack.information_mediator.xroad.ui.LoginTests","Given: security server is opened; When: user system-administrator tries to log in; Then: user is logged in","Given: security server is opened; When: user system-administrator tries to log in; Then: user is logged in",""
"passed","Thu Oct 12 13:06:33 EEST 2023","Thu Oct 12 13:06:33 EEST 2023","132","GenericSpecification","GetRoomDetailsTests","","com.govstack.information_mediator.pubsub.api.management.rooms.GetRoomDetailsTests","Given: a manager with a room; When: manager gets their room details with a problem 'non-existent room'; Then: getting room details fails with 404: 'Room was not found'","Given: a manager with a room; When: manager gets their room details with a problem 'non-existent room'; Then: getting room details fails with 404: 'Room was not found'",""
"passed","Thu Oct 12 13:06:34 EEST 2023","Thu Oct 12 13:06:34 EEST 2023","369","GenericSpecification","GetRoomsTests","","com.govstack.information_mediator.pubsub.api.management.rooms.GetRoomsTests","Given: a manager with multiple rooms; When: member gets their rooms with pageSortingParameters null; Then: getting rooms succeeds and correct rooms are returned","Given: a manager with multiple rooms; When: member gets their rooms with pageSortingParameters null; Then: getting rooms succeeds and correct rooms are returned",""
"passed","Thu Oct 12 13:07:06 EEST 2023","Thu Oct 12 13:07:06 EEST 2023","1","GenericSpecification","EventTypeTests","","com.govstack.information_mediator.pubsub.ui.EventTypeTests","Given: a room with event types (active & terminated); When: user opens Event Types list; Then: rooms' active event types are listed","Given: a room with event types (active & terminated); When: user opens Event Types list; Then: rooms' active event types are listed",""
"passed","Thu Oct 12 13:06:48 EEST 2023","Thu Oct 12 13:06:48 EEST 2023","142","GenericSpecification","UnsubscribeTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.UnsubscribeTests","Given: member's PENDING subscription; When: member unsubscribes; Then: unsubscribe succeeds and correct data is saved in DB","Given: member's PENDING subscription; When: member unsubscribes; Then: unsubscribe succeeds and correct data is saved in DB",""
"passed","Thu Oct 12 13:07:52 EEST 2023","Thu Oct 12 13:08:01 EEST 2023","8690","GenericSpecification","ManagersTests","","com.govstack.information_mediator.pubsub.ui.ManagersTests","Given: admin is logged in; When: admin creates INTERNAL manager; Then: manager added","Given: admin is logged in; When: admin creates INTERNAL manager; Then: manager added",""
"passed","Thu Oct 12 13:07:00 EEST 2023","Thu Oct 12 13:07:00 EEST 2023","155","GenericSpecification","PublishTests","","com.govstack.information_mediator.pubsub.api.messaging.PublishTests","Given: an event type; When: a message with problem 'terminated publisher' is published; Then: publish fails with 404: 'Publisher was not found' ","Given: an event type; When: a message with problem 'terminated publisher' is published; Then: publish fails with 404: 'Publisher was not found' ",""
"passed","Thu Oct 12 13:07:04 EEST 2023","Thu Oct 12 13:07:04 EEST 2023","234","GenericSpecification","PullTests","","com.govstack.information_mediator.pubsub.api.messaging.PullTests","Given: event type with 1 active PULL subscription; When: message is pulled with problem 'TERMINATED subscription status'; Then: pull fails with 404","Given: event type with 1 active PULL subscription; When: message is pulled with problem 'TERMINATED subscription status'; Then: pull fails with 404",""
"passed","Thu Oct 12 13:06:33 EEST 2023","Thu Oct 12 13:06:33 EEST 2023","240","GenericSpecification","GetRoomDetailsTests","","com.govstack.information_mediator.pubsub.api.management.rooms.GetRoomDetailsTests","Given: a manager with a room; When: manager gets their room details with a problem 'other manager's room'; Then: getting room details fails with 403: 'Forbidden'","Given: a manager with a room; When: manager gets their room details with a problem 'other manager's room'; Then: getting room details fails with 403: 'Forbidden'",""
"passed","Thu Oct 12 13:07:07 EEST 2023","Thu Oct 12 13:07:07 EEST 2023","0","GenericSpecification","EventsTests","","com.govstack.information_mediator.pubsub.ui.EventsTests","Given: a room with events (different: event types, event type versions, publishers); When: user filters events list by 'Event type'; Then: only events matching 'Event type' values are listed","Given: a room with events (different: event types, event type versions, publishers); When: user filters events list by 'Event type'; Then: only events matching 'Event type' values are listed",""
"passed","Thu Oct 12 13:08:15 EEST 2023","Thu Oct 12 13:08:15 EEST 2023","2","GenericSpecification","RoomListTests","","com.govstack.information_mediator.pubsub.ui.RoomListTests","Given: admin is logged in and room exists; When: admin edits rooms (room identifier, manager identifier, message expiration, delivery delay, delivery delay multiplier, delivery attempts); Then: room saved with the changed configuration","Given: admin is logged in and room exists; When: admin edits rooms (room identifier, manager identifier, message expiration, delivery delay, delivery delay multiplier, delivery attempts); Then: room saved with the changed configuration",""
"passed","Thu Oct 12 13:08:16 EEST 2023","Thu Oct 12 13:08:16 EEST 2023","1","GenericSpecification","SubscriptionTests","","com.govstack.information_mediator.pubsub.ui.SubscriptionTests","Given: a room with subscriptions in all statuses (PENDING, ACTIVE, REJECTED, TERMINATED) exists; When: user filters rooms' subscriptions by status REJECTED; Then: rooms' subscriptions with status REJECTED are listed","Given: a room with subscriptions in all statuses (PENDING, ACTIVE, REJECTED, TERMINATED) exists; When: user filters rooms' subscriptions by status REJECTED; Then: rooms' subscriptions with status REJECTED are listed",""
"passed","Thu Oct 12 13:06:53 EEST 2023","Thu Oct 12 13:06:53 EEST 2023","261","GenericSpecification","PublishTests","","com.govstack.information_mediator.pubsub.api.messaging.PublishTests","Given: an event type with a TERMINATED subscription; When: message is published; Then: publish succeeds and event is created and no message is published","Given: an event type with a TERMINATED subscription; When: message is published; Then: publish succeeds and event is created and no message is published",""
"passed","Thu Oct 12 13:07:07 EEST 2023","Thu Oct 12 13:07:07 EEST 2023","0","GenericSpecification","EventsTests","","com.govstack.information_mediator.pubsub.ui.EventsTests","Given: a room with events (different: event types, event type versions, publishers); When: user filters events list by 'Event type, Version & Event publisher'; Then: only events matching 'Event type, Version & Event publisher' values are listed","Given: a room with events (different: event types, event type versions, publishers); When: user filters events list by 'Event type, Version & Event publisher'; Then: only events matching 'Event type, Version & Event publisher' values are listed",""
"passed","Thu Oct 12 13:06:17 EEST 2023","Thu Oct 12 13:06:17 EEST 2023","10","GenericSpecification","DeleteEventTypeVersionsTests","","com.govstack.information_mediator.pubsub.api.management.event_type_versions.DeleteEventTypeVersionsTests","Given: a room with event type that has multiple versions; When: manager terminates an event type version; Then: event type version is terminated","Given: a room with event type that has multiple versions; When: manager terminates an event type version; Then: event type version is terminated",""
"passed","Thu Oct 12 13:06:45 EEST 2023","Thu Oct 12 13:06:46 EEST 2023","220","GenericSpecification","SubscribeTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.SubscribeTests","Given: an active room with event type and an active PUSH subscription; When: member subscribes 2nd time with a different pushUrl; Then: subscribe succeeds and correct data is saved","Given: an active room with event type and an active PUSH subscription; When: member subscribes 2nd time with a different pushUrl; Then: subscribe succeeds and correct data is saved",""
"passed","Thu Oct 12 13:06:35 EEST 2023","Thu Oct 12 13:06:35 EEST 2023","132","GenericSpecification","GetRoomsTests","","com.govstack.information_mediator.pubsub.api.management.rooms.GetRoomsTests","Given: a manager with no rooms; When: member gets their rooms; Then: getting rooms succeeds and an empty list is returned","Given: a manager with no rooms; When: member gets their rooms; Then: getting rooms succeeds and an empty list is returned",""
"passed","Thu Oct 12 13:08:15 EEST 2023","Thu Oct 12 13:08:15 EEST 2023","1","GenericSpecification","PublisherTests","","com.govstack.information_mediator.pubsub.ui.PublisherTests","Given: room with publishers; When: user terminates publisher; Then: publisher is terminated","Given: room with publishers; When: user terminates publisher; Then: publisher is terminated",""
"passed","Thu Oct 12 13:08:16 EEST 2023","Thu Oct 12 13:08:16 EEST 2023","1","GenericSpecification","SubscriptionTests","","com.govstack.information_mediator.pubsub.ui.SubscriptionTests","Given: a room with subscription method PULL exist; When: user opens subscription details; Then: subscription details displayed (ID, Identifier, Status, Method, Created At)","Given: a room with subscription method PULL exist; When: user opens subscription details; Then: subscription details displayed (ID, Identifier, Status, Method, Created At)",""
"passed","Thu Oct 12 13:07:05 EEST 2023","Thu Oct 12 13:07:06 EEST 2023","230","GenericSpecification","PullTests","","com.govstack.information_mediator.pubsub.api.messaging.PullTests","Given: event type with 1 active PULL subscription; When: message is pulled with problem 'subscriptionId query parameter missing'; Then: pull fails with 404","Given: event type with 1 active PULL subscription; When: message is pulled with problem 'subscriptionId query parameter missing'; Then: pull fails with 404",""
"passed","Thu Oct 12 13:08:16 EEST 2023","Thu Oct 12 13:08:16 EEST 2023","1","GenericSpecification","SubscriptionTests","","com.govstack.information_mediator.pubsub.ui.SubscriptionTests","Given: a room with subscriptions in all statuses (PENDING, ACTIVE, REJECTED, TERMINATED) exists; When: user filters rooms' subscriptions by status PENDING; Then: rooms' subscriptions with status PENDING are listed","Given: a room with subscriptions in all statuses (PENDING, ACTIVE, REJECTED, TERMINATED) exists; When: user filters rooms' subscriptions by status PENDING; Then: rooms' subscriptions with status PENDING are listed",""
"passed","Thu Oct 12 13:06:32 EEST 2023","Thu Oct 12 13:06:32 EEST 2023","460","GenericSpecification","GetRoomDetailsTests","","com.govstack.information_mediator.pubsub.api.management.rooms.GetRoomDetailsTests","Given: a manager with a room; When: manager gets their room details; Then: getting room details succeeds and correct details are returned","Given: a manager with a room; When: manager gets their room details; Then: getting room details succeeds and correct details are returned",""
"passed","Thu Oct 12 13:06:49 EEST 2023","Thu Oct 12 13:06:49 EEST 2023","174","GenericSpecification","UnsubscribeTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.UnsubscribeTests","Given: member's subscription; When: member unsubscribes with problem 'subscription in another room'; Then: unsubscribe fails with 404","Given: member's subscription; When: member unsubscribes with problem 'subscription in another room'; Then: unsubscribe fails with 404",""
"passed","Thu Oct 12 13:06:49 EEST 2023","Thu Oct 12 13:06:49 EEST 2023","174","GenericSpecification","UnsubscribeTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.UnsubscribeTests","Given: member's subscription; When: member unsubscribes with problem 'terminated room'; Then: unsubscribe fails with 404","Given: member's subscription; When: member unsubscribes with problem 'terminated room'; Then: unsubscribe fails with 404",""
"passed","Thu Oct 12 13:06:30 EEST 2023","Thu Oct 12 13:06:32 EEST 2023","1915","GenericSpecification","EditRoomTests","","com.govstack.information_mediator.pubsub.api.management.rooms.EditRoomTests","Given: a room; When: manager edits the room; Then: editing room succeeds and new config returned","Given: a room; When: manager edits the room; Then: editing room succeeds and new config returned",""
"passed","Thu Oct 12 13:06:36 EEST 2023","Thu Oct 12 13:06:36 EEST 2023","0","GenericSpecification","ListSubscriptionEventsDeliveryInfoTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.ListSubscriptionEventsDeliveryInfoTests","Given: a room with subscription method PUSH exists and event published to room and delivered to subscriber; When: manager lists subscription events with status filter='DELIVERED'; Then: only subscriber events with status 'DELIVERED' returned","Given: a room with subscription method PUSH exists and event published to room and delivered to subscriber; When: manager lists subscription events with status filter='DELIVERED'; Then: only subscriber events with status 'DELIVERED' returned",""
"passed","Thu Oct 12 13:06:43 EEST 2023","Thu Oct 12 13:06:43 EEST 2023","200","GenericSpecification","ListSubscriptionsTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.ListSubscriptionsTests","Given: a member with a subscription in a room; When: member lists their subscriptions with a problem ''X-Road-Client' header not matching 'memberId''; Then: listing of subscription fails with 403","Given: a member with a subscription in a room; When: member lists their subscriptions with a problem ''X-Road-Client' header not matching 'memberId''; Then: listing of subscription fails with 403",""
"passed","Thu Oct 12 13:08:15 EEST 2023","Thu Oct 12 13:08:15 EEST 2023","1","GenericSpecification","RoomListTests","","com.govstack.information_mediator.pubsub.ui.RoomListTests","Given: rooms exist and admin is logged in; When: admin views room details; Then: room details are displayed","Given: rooms exist and admin is logged in; When: admin views room details; Then: room details are displayed",""
"passed","Thu Oct 12 13:08:16 EEST 2023","Thu Oct 12 13:08:16 EEST 2023","0","GenericSpecification","SubscriptionTests","","com.govstack.information_mediator.pubsub.ui.SubscriptionTests","Given: a room with subscription method PUSH exists and event published to room and it has expired before it could be delivered; When: user opens subscription details; Then: event shown as UNCONSUMED under 'Published events'","Given: a room with subscription method PUSH exists and event published to room and it has expired before it could be delivered; When: user opens subscription details; Then: event shown as UNCONSUMED under 'Published events'",""
"passed","Thu Oct 12 13:06:46 EEST 2023","Thu Oct 12 13:06:46 EEST 2023","152","GenericSpecification","SubscribeTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.SubscribeTests","Given: an active room with event type; When: member subscribes with problem: terminated room; Then: subscribe fails with 404","Given: an active room with event type; When: member subscribes with problem: terminated room; Then: subscribe fails with 404",""
"passed","Thu Oct 12 13:06:43 EEST 2023","Thu Oct 12 13:06:43 EEST 2023","177","GenericSpecification","ListSubscriptionsTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.ListSubscriptionsTests","Given: a member with a subscription in a room; When: member lists their subscriptions with a problem 'non-existent room'; Then: listing of subscription fails with 404","Given: a member with a subscription in a room; When: member lists their subscriptions with a problem 'non-existent room'; Then: listing of subscription fails with 404",""
"passed","Thu Oct 12 13:08:16 EEST 2023","Thu Oct 12 13:08:16 EEST 2023","1","GenericSpecification","RoomListTests","","com.govstack.information_mediator.pubsub.ui.RoomListTests","Given: manager is logged in and room exists; When: manager terminates room; Then: room terminated and related entities (event types, event type versions, publishers, subscriptions) terminated","Given: manager is logged in and room exists; When: manager terminates room; Then: room terminated and related entities (event types, event type versions, publishers, subscriptions) terminated",""
"passed","Thu Oct 12 13:08:15 EEST 2023","Thu Oct 12 13:08:15 EEST 2023","1","GenericSpecification","RoomListTests","","com.govstack.information_mediator.pubsub.ui.RoomListTests","Given: rooms exist and admin is logged in; When: admin opens 'Rooms List' page; Then: all active rooms are listed","Given: rooms exist and admin is logged in; When: admin opens 'Rooms List' page; Then: all active rooms are listed",""
"passed","Thu Oct 12 13:06:46 EEST 2023","Thu Oct 12 13:06:46 EEST 2023","155","GenericSpecification","SubscribeTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.SubscribeTests","Given: an active room with event type; When: member subscribes with problem: non-existent room; Then: subscribe fails with 404","Given: an active room with event type; When: member subscribes with problem: non-existent room; Then: subscribe fails with 404",""
"passed","Thu Oct 12 13:06:35 EEST 2023","Thu Oct 12 13:06:36 EEST 2023","151","GenericSpecification","GetRoomsTests","","com.govstack.information_mediator.pubsub.api.management.rooms.GetRoomsTests","Given: a manager; When: member gets their rooms with a problem: terminated manager; Then: getting rooms fails","Given: a manager; When: member gets their rooms with a problem: terminated manager; Then: getting rooms fails",""
"passed","Thu Oct 12 13:06:28 EEST 2023","Thu Oct 12 13:06:28 EEST 2023","329","GenericSpecification","DeleteRoomTests","","com.govstack.information_mediator.pubsub.api.management.rooms.DeleteRoomTests","Given: a manager with a room; When: manager terminates the room with a problem: terminated manager; Then: terminating room fails with 404: Manager was not found","Given: a manager with a room; When: manager terminates the room with a problem: terminated manager; Then: terminating room fails with 404: Manager was not found",""
"passed","Thu Oct 12 13:07:05 EEST 2023","Thu Oct 12 13:07:05 EEST 2023","145","GenericSpecification","PullTests","","com.govstack.information_mediator.pubsub.api.messaging.PullTests","Given: event type with 1 active PULL subscription; When: message is pulled with problem 'no published message'; Then: pull fails with 404","Given: event type with 1 active PULL subscription; When: message is pulled with problem 'no published message'; Then: pull fails with 404",""
"passed","Thu Oct 12 13:08:15 EEST 2023","Thu Oct 12 13:08:15 EEST 2023","0","GenericSpecification","PublisherTests","","com.govstack.information_mediator.pubsub.ui.PublisherTests","Given: room with multiple event types; When: user adds publisher for all event type(s); Then: publisher added for all event type(s)","Given: room with multiple event types; When: user adds publisher for all event type(s); Then: publisher added for all event type(s)",""
"passed","Thu Oct 12 13:06:44 EEST 2023","Thu Oct 12 13:06:44 EEST 2023","193","GenericSpecification","SubscribeTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.SubscribeTests","Given: an active room with event type; When: member subscribes with data: [method:PULL, pushUrl:https://host/url]; Then: subscribe succeeds and correct data is saved","Given: an active room with event type; When: member subscribes with data: [method:PULL, pushUrl:https://host/url]; Then: subscribe succeeds and correct data is saved",""
"passed","Thu Oct 12 13:08:15 EEST 2023","Thu Oct 12 13:08:15 EEST 2023","1","GenericSpecification","PublisherTests","","com.govstack.information_mediator.pubsub.ui.PublisherTests","Given: room with multiple event types and publisher to 1 event type; When: user updates publisher to 2 event types; Then: publisher can publish events to 2 event types","Given: room with multiple event types and publisher to 1 event type; When: user updates publisher to 2 event types; Then: publisher can publish events to 2 event types",""
"passed","Thu Oct 12 13:06:43 EEST 2023","Thu Oct 12 13:06:43 EEST 2023","138","GenericSpecification","ListSubscriptionsTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.ListSubscriptionsTests","Given: a member with a subscription in a room; When: member lists their subscriptions with a problem 'terminated room'; Then: listing of subscription fails with 404","Given: a member with a subscription in a room; When: member lists their subscriptions with a problem 'terminated room'; Then: listing of subscription fails with 404",""
"passed","Thu Oct 12 13:06:49 EEST 2023","Thu Oct 12 13:06:49 EEST 2023","153","GenericSpecification","UnsubscribeTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.UnsubscribeTests","Given: member's subscription; When: member unsubscribes with problem 'non-existent room'; Then: unsubscribe fails with 404","Given: member's subscription; When: member unsubscribes with problem 'non-existent room'; Then: unsubscribe fails with 404",""
"passed","Thu Oct 12 13:06:17 EEST 2023","Thu Oct 12 13:06:17 EEST 2023","5","GenericSpecification","GetEventTypesTests","","com.govstack.information_mediator.pubsub.api.management.event_types.GetEventTypesTests","Given: a room with event types (active & terminated); When: manager lists event types; Then: rooms' active event types are returned","Given: a room with event types (active & terminated); When: manager lists event types; Then: rooms' active event types are returned",""
"passed","Thu Oct 12 13:07:06 EEST 2023","Thu Oct 12 13:07:06 EEST 2023","1","GenericSpecification","EventTypeTests","","com.govstack.information_mediator.pubsub.ui.EventTypeTests","Given: a room; When: user adds event type with valid JSON schema to room; Then: event type with version 1 saved in room","Given: a room; When: user adds event type with valid JSON schema to room; Then: event type with version 1 saved in room",""
"passed","Thu Oct 12 13:06:33 EEST 2023","Thu Oct 12 13:06:33 EEST 2023","185","GenericSpecification","GetRoomDetailsTests","","com.govstack.information_mediator.pubsub.api.management.rooms.GetRoomDetailsTests","Given: a manager with a room; When: manager gets their room details with a problem 'terminated room'; Then: getting room details fails with 404: 'Room was not found'","Given: a manager with a room; When: manager gets their room details with a problem 'terminated room'; Then: getting room details fails with 404: 'Room was not found'",""
"passed","Thu Oct 12 13:06:53 EEST 2023","Thu Oct 12 13:06:54 EEST 2023","762","GenericSpecification","PublishTests","","com.govstack.information_mediator.pubsub.api.messaging.PublishTests","Given: an event type with 1 active PULL subscription; When: message is published; Then: publish succeeds and 1 event is created, published","Given: an event type with 1 active PULL subscription; When: message is published; Then: publish succeeds and 1 event is created, published",""
"passed","Thu Oct 12 13:06:30 EEST 2023","Thu Oct 12 13:06:30 EEST 2023","335","GenericSpecification","DeleteRoomTests","","com.govstack.information_mediator.pubsub.api.management.rooms.DeleteRoomTests","Given: a manager with a room; When: manager terminates the room with a problem: 'X-Road-Client' header not matching 'memberId'; Then: terminating room fails with 403: Forbidden","Given: a manager with a room; When: manager terminates the room with a problem: 'X-Road-Client' header not matching 'memberId'; Then: terminating room fails with 403: Forbidden",""
"passed","Thu Oct 12 13:07:02 EEST 2023","Thu Oct 12 13:07:03 EEST 2023","520","GenericSpecification","PullTests","","com.govstack.information_mediator.pubsub.api.messaging.PullTests","Given: event type with 1 active PULL subscription and a published message; When: message is pulled; Then: pull succeeds and no more events in queue and message marked as delivered","Given: event type with 1 active PULL subscription and a published message; When: message is pulled; Then: pull succeeds and no more events in queue and message marked as delivered",""
"passed","Thu Oct 12 13:08:39 EEST 2023","Thu Oct 12 13:08:45 EEST 2023","6000","GenericSpecification","LoginTests","","com.govstack.information_mediator.xroad.ui.LoginTests","Given: security server is opened; When: user service-administrator tries to log in; Then: user is logged in","Given: security server is opened; When: user service-administrator tries to log in; Then: user is logged in",""
"passed","Thu Oct 12 13:06:41 EEST 2023","Thu Oct 12 13:06:42 EEST 2023","1232","GenericSpecification","ListSubscriptionsTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.ListSubscriptionsTests","Given: a member with multiple subscriptions in different rooms; When: member lists their subscriptions; Then: listing of subscription succeeds and correct data is returned","Given: a member with multiple subscriptions in different rooms; When: member lists their subscriptions; Then: listing of subscription succeeds and correct data is returned",""
"passed","Thu Oct 12 13:07:06 EEST 2023","Thu Oct 12 13:07:06 EEST 2023","298","GenericSpecification","PullTests","","com.govstack.information_mediator.pubsub.api.messaging.PullTests","Given: event type with 1 active PULL subscription; When: message is pulled with problem 'subscriptionId query parameter not an uuid'; Then: pull fails with 500","Given: event type with 1 active PULL subscription; When: message is pulled with problem 'subscriptionId query parameter not an uuid'; Then: pull fails with 500",""
"passed","Thu Oct 12 13:06:36 EEST 2023","Thu Oct 12 13:06:36 EEST 2023","0","GenericSpecification","ListSubscriptionEventsDeliveryInfoTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.ListSubscriptionEventsDeliveryInfoTests","Given: a room with subscription method PULL exists and event published to room and it has expired before it was pulled; When: manager lists subscription events with status filter='UNCONSUMED'; Then: only subscriber events with status 'UNCONSUMED' returned","Given: a room with subscription method PULL exists and event published to room and it has expired before it was pulled; When: manager lists subscription events with status filter='UNCONSUMED'; Then: only subscriber events with status 'UNCONSUMED' returned",""
"passed","Thu Oct 12 13:06:48 EEST 2023","Thu Oct 12 13:06:48 EEST 2023","205","GenericSpecification","SubscribeTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.SubscribeTests","Given: an active room with event type; When: member subscribes with problem: member already has 1 active PUSH subscription with the same pushUrl and subscriptionIdentifier for this event type; Then: subscribe fails with 500","Given: an active room with event type; When: member subscribes with problem: member already has 1 active PUSH subscription with the same pushUrl and subscriptionIdentifier for this event type; Then: subscribe fails with 500",""
"passed","Thu Oct 12 13:08:16 EEST 2023","Thu Oct 12 13:08:16 EEST 2023","2","GenericSpecification","SubscriptionTests","","com.govstack.information_mediator.pubsub.ui.SubscriptionTests","Given: a room with subscription in status PENDING; When: user approves subscription; Then: approving succeeds and subscription status set to ACTIVE","Given: a room with subscription in status PENDING; When: user approves subscription; Then: approving succeeds and subscription status set to ACTIVE",""
"passed","Thu Oct 12 13:08:15 EEST 2023","Thu Oct 12 13:08:15 EEST 2023","1","GenericSpecification","RoomListTests","","com.govstack.information_mediator.pubsub.ui.RoomListTests","Given: admin is logged in and room exists; When: admin terminates room; Then: room terminated and related entities (event types, event type versions, publishers, subscriptions) terminated","Given: admin is logged in and room exists; When: admin terminates room; Then: room terminated and related entities (event types, event type versions, publishers, subscriptions) terminated",""
"passed","Thu Oct 12 13:06:36 EEST 2023","Thu Oct 12 13:06:36 EEST 2023","1","GenericSpecification","ListSubscriptionEventsDeliveryInfoTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.ListSubscriptionEventsDeliveryInfoTests","Given: a room with subscription method PULL exists and event published to room and pulled by subscriber; When: manager lists subscription events with status filter='DELIVERED'; Then: only subscriber events with status 'DELIVERED' returned","Given: a room with subscription method PULL exists and event published to room and pulled by subscriber; When: manager lists subscription events with status filter='DELIVERED'; Then: only subscriber events with status 'DELIVERED' returned",""
"passed","Thu Oct 12 13:06:40 EEST 2023","Thu Oct 12 13:06:41 EEST 2023","1174","GenericSpecification","ListSubscriptionsTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.ListSubscriptionsTests","Given: a member with subscriptions in different statuses in a room; When: member lists their status=null subscriptions; Then: listing of subscription succeeds and all subscriptions are returned","Given: a member with subscriptions in different statuses in a room; When: member lists their status=null subscriptions; Then: listing of subscription succeeds and all subscriptions are returned",""
"passed","Thu Oct 12 13:06:36 EEST 2023","Thu Oct 12 13:06:36 EEST 2023","3","GenericSpecification","HandleSubscriptionTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.HandleSubscriptionTests","Given: a room with subscription in status PENDING; When: manager approves subscription; Then: approving succeeds and subscription status set to ACTIVE","Given: a room with subscription in status PENDING; When: manager approves subscription; Then: approving succeeds and subscription status set to ACTIVE",""
"passed","Thu Oct 12 13:06:33 EEST 2023","Thu Oct 12 13:06:33 EEST 2023","160","GenericSpecification","GetRoomDetailsTests","","com.govstack.information_mediator.pubsub.api.management.rooms.GetRoomDetailsTests","Given: a manager with a room; When: manager gets their room details with a problem 'terminated manager'; Then: getting room details fails with 404: 'Manager was not found'","Given: a manager with a room; When: manager gets their room details with a problem 'terminated manager'; Then: getting room details fails with 404: 'Manager was not found'",""
"passed","Thu Oct 12 13:06:47 EEST 2023","Thu Oct 12 13:06:47 EEST 2023","155","GenericSpecification","SubscribeTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.SubscribeTests","Given: an active room with event type; When: member subscribes with problem: 'X-Road-Client' header not matching 'memberId'; Then: subscribe fails with 403","Given: an active room with event type; When: member subscribes with problem: 'X-Road-Client' header not matching 'memberId'; Then: subscribe fails with 403",""
"passed","Thu Oct 12 13:06:48 EEST 2023","Thu Oct 12 13:06:48 EEST 2023","250","GenericSpecification","UnsubscribeTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.UnsubscribeTests","Given: member's subscription; When: member unsubscribes with problem 'subscription already terminated'; Then: unsubscribe fails with 404","Given: member's subscription; When: member unsubscribes with problem 'subscription already terminated'; Then: unsubscribe fails with 404",""
"passed","Thu Oct 12 13:08:15 EEST 2023","Thu Oct 12 13:08:15 EEST 2023","1","GenericSpecification","PublisherTests","","com.govstack.information_mediator.pubsub.ui.PublisherTests","Given: room with publishers; When: user opens publishers tab; Then: rooms' all active publishers are listed","Given: room with publishers; When: user opens publishers tab; Then: rooms' all active publishers are listed",""
"passed","Thu Oct 12 13:08:22 EEST 2023","Thu Oct 12 13:08:27 EEST 2023","5771","GenericSpecification","LoginTests","","com.govstack.information_mediator.xroad.ui.LoginTests","Given: security server is opened; When: user registration-officer tries to log in; Then: user is logged in","Given: security server is opened; When: user registration-officer tries to log in; Then: user is logged in",""
"passed","Thu Oct 12 13:06:36 EEST 2023","Thu Oct 12 13:06:36 EEST 2023","2","GenericSpecification","HandleSubscriptionTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.HandleSubscriptionTests","Given: a room with ACTIVE subscription exists; When: manager terminates subscription; Then: subscription is terminated","Given: a room with ACTIVE subscription exists; When: manager terminates subscription; Then: subscription is terminated",""
"passed","Thu Oct 12 13:06:35 EEST 2023","Thu Oct 12 13:06:35 EEST 2023","258","GenericSpecification","GetRoomsTests","","com.govstack.information_mediator.pubsub.api.management.rooms.GetRoomsTests","Given: a manager; When: member gets their rooms with a problem: non-existent manager; Then: getting rooms fails","Given: a manager; When: member gets their rooms with a problem: non-existent manager; Then: getting rooms fails",""
"passed","Thu Oct 12 13:06:36 EEST 2023","Thu Oct 12 13:06:36 EEST 2023","2","GenericSpecification","GetAllSubscriptionEventsTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.GetAllSubscriptionEventsTests","Given: a room with multiple subscriptions exist; When: manager lists all subscriptions; Then: all subscriptions with details returned","Given: a room with multiple subscriptions exist; When: manager lists all subscriptions; Then: all subscriptions with details returned",""
"passed","Thu Oct 12 13:08:16 EEST 2023","Thu Oct 12 13:08:16 EEST 2023","1","GenericSpecification","SubscriptionTests","","com.govstack.information_mediator.pubsub.ui.SubscriptionTests","Given: a room with subscription method PUSH exists and event published to room, but not delivered and no more delivery attempts remaining; When: user opens subscription details; Then: event shown as UNCONSUMED under 'Published events'","Given: a room with subscription method PUSH exists and event published to room, but not delivered and no more delivery attempts remaining; When: user opens subscription details; Then: event shown as UNCONSUMED under 'Published events'",""
"passed","Thu Oct 12 13:08:15 EEST 2023","Thu Oct 12 13:08:15 EEST 2023","1","GenericSpecification","PublisherTests","","com.govstack.information_mediator.pubsub.ui.PublisherTests","Given: room with multiple event types; When: user adds publisher for one event type(s); Then: publisher added for one event type(s)","Given: room with multiple event types; When: user adds publisher for one event type(s); Then: publisher added for one event type(s)",""
"passed","Thu Oct 12 13:08:16 EEST 2023","Thu Oct 12 13:08:16 EEST 2023","1","GenericSpecification","SubscriptionTests","","com.govstack.information_mediator.pubsub.ui.SubscriptionTests","Given: admin is logged in and room with ACTIVE subscription exists; When: admin terminates subscription; Then: subscription is terminated","Given: admin is logged in and room with ACTIVE subscription exists; When: admin terminates subscription; Then: subscription is terminated",""
"passed","Thu Oct 12 13:06:34 EEST 2023","Thu Oct 12 13:06:35 EEST 2023","253","GenericSpecification","GetRoomsTests","","com.govstack.information_mediator.pubsub.api.management.rooms.GetRoomsTests","Given: a manager with multiple rooms; When: member gets their rooms with pageSortingParameters [limit:1]; Then: getting rooms succeeds and correct rooms are returned","Given: a manager with multiple rooms; When: member gets their rooms with pageSortingParameters [limit:1]; Then: getting rooms succeeds and correct rooms are returned",""
"passed","Thu Oct 12 13:07:06 EEST 2023","Thu Oct 12 13:07:06 EEST 2023","1","GenericSpecification","EventTypeTests","","com.govstack.information_mediator.pubsub.ui.EventTypeTests","Given: a room with event type; When: user downloads event type version; Then: event type schema JSON is downloaded","Given: a room with event type; When: user downloads event type version; Then: event type schema JSON is downloaded",""
"passed","Thu Oct 12 13:06:36 EEST 2023","Thu Oct 12 13:06:36 EEST 2023","1","GenericSpecification","HandleSubscriptionTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.HandleSubscriptionTests","Given: a room with PENDING subscription exists; When: manager terminates subscription; Then: subscription is terminated","Given: a room with PENDING subscription exists; When: manager terminates subscription; Then: subscription is terminated",""
"passed","Thu Oct 12 13:06:44 EEST 2023","Thu Oct 12 13:06:44 EEST 2023","195","GenericSpecification","SubscribeTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.SubscribeTests","Given: an active room with event type; When: member subscribes with data: [method:PULL, deliveryDelayMultiplier:10.0]; Then: subscribe succeeds and correct data is saved","Given: an active room with event type; When: member subscribes with data: [method:PULL, deliveryDelayMultiplier:10.0]; Then: subscribe succeeds and correct data is saved",""
"passed","Thu Oct 12 13:06:46 EEST 2023","Thu Oct 12 13:06:46 EEST 2023","173","GenericSpecification","SubscribeTests","","com.govstack.information_mediator.pubsub.api.management.subscriptions.SubscribeTests","Given: an active room with event type; When: member subscribes with problem: PUSH subscription not having a URI; Then: subscribe fails with 500","Given: an active room with event type; When: member subscribes with problem: PUSH subscription not having a URI; Then: subscribe fails with 500",""
"passed","Thu Oct 12 13:06:32 EEST 2023","Thu Oct 12 13:06:32 EEST 2023","238","GenericSpecification","GetRoomDetailsTests","","com.govstack.information_mediator.pubsub.api.management.rooms.GetRoomDetailsTests","Given: a manager with a room; When: manager gets their room details with a problem 'non-existent manager'; Then: getting room details fails with 403: 'Forbidden'","Given: a manager with a room; When: manager gets their room details with a problem 'non-existent manager'; Then: getting room details fails with 403: 'Forbidden'",""
"passed","Thu Oct 12 13:06:36 EEST 2023","Thu Oct 12 13:06:36 EEST 2023","259","GenericSpecification","GetRoomsTests","","com.govstack.information_mediator.pubsub.api.management.rooms.GetRoomsTests","Given: a manager; When: member gets their rooms with a problem: 'X-Road-Client' header not matching 'memberId'; Then: getting rooms fails","Given: a manager; When: member gets their rooms with a problem: 'X-Road-Client' header not matching 'memberId'; Then: getting rooms fails",""
"passed","Thu Oct 12 13:08:16 EEST 2023","Thu Oct 12 13:08:22 EEST 2023","6004","GenericSpecification","LoginTests","","com.govstack.information_mediator.xroad.ui.LoginTests","Given: security server is opened; When: user security-officer tries to log in; Then: user is logged in","Given: security server is opened; When: user security-officer tries to log in; Then: user is logged in",""
"passed","Thu Oct 12 13:07:06 EEST 2023","Thu Oct 12 13:07:06 EEST 2023","1","GenericSpecification","EventsTests","","com.govstack.information_mediator.pubsub.ui.EventsTests","Given: a room with events; When: user opens events list; Then: events published to the room from the last 7 days are listed","Given: a room with events; When: user opens events list; Then: events published to the room from the last 7 days are listed",""
"passed","Thu Oct 12 13:07:00 EEST 2023","Thu Oct 12 13:07:00 EEST 2023","177","GenericSpecification","PublishTests","","com.govstack.information_mediator.pubsub.api.messaging.PublishTests","Given: an event type; When: a message with problem 'non-existent publisher' is published; Then: publish fails with 404: 'Publisher was not found' ","Given: an event type; When: a message with problem 'non-existent publisher' is published; Then: publish fails with 404: 'Publisher was not found' ",""
